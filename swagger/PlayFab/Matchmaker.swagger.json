{
  "swagger": "2.0",
  "info": {
    "version": "180605",
    "title": "PlayFab Matchmaker API",
    "description": "Enables the use of an external match-making service in conjunction with PlayFab hosted Game Server instances",
    "termsOfService": "https://playfab.com/terms/",
    "contact": {
      "url": "https://community.playfab.com/index.html"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://github.com/PlayFab/API_Specs/blob/master/LICENSE"
    }
  },
  "host": "titleId.playfabapi.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Matchmaker/AuthUser": {
      "post": {
        "tags": [
          "Matchmaking"
        ],
        "summary": "Validates a user with the PlayFab service",
        "description": "Validates a user with the PlayFab service",
        "externalDocs": {
          "url": "https://api.playfab.com/documentation/Matchmaker/Method/AuthUser"
        },
        "parameters": [
          {
            "$ref": "#/definitions/AuthUserRequest"
          }
        ],
        "security": [
          {
            "SecretKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The basic wrapper around all successful api calls",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": ""
                },
                "status": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "$ref": "#/responses/AuthUserResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ApiErrorWrapper"
          }
        },
        "x-requestDetails": "This API allows the external match-making service to confirm that the user has a valid Session Ticket for the title, in order to securely enable match-making. The client passes the user's Session Ticket to the external match-making service, which then passes the Session Ticket in as the AuthorizationTicket in this call.",
        "x-auth": "SecretKey",
        "x-requestType": "AuthUserRequest",
        "x-resultType": "AuthUserResponse",
        "x-seeAlso": [
          "Matchmaker/PlayerJoined",
          "Matchmaker/PlayerLeft",
          "Matchmaker/StartGame",
          "Matchmaker/UserInfo"
        ],
        "x-errors": [
          "InvalidParams"
        ]
      }
    },
    "/Matchmaker/DeregisterGame": {
      "post": {
        "tags": [
          "Matchmaking"
        ],
        "summary": "Inform the matchmaker that a Game Server Instance is removed.",
        "description": "Inform the matchmaker that a Game Server Instance is removed.",
        "externalDocs": {
          "url": "https://api.playfab.com/documentation/Matchmaker/Method/DeregisterGame"
        },
        "parameters": [
          {
            "$ref": "#/definitions/DeregisterGameRequest"
          }
        ],
        "security": [
          {
            "SecretKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The basic wrapper around all successful api calls",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": ""
                },
                "status": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "$ref": "#/responses/DeregisterGameResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ApiErrorWrapper"
          }
        },
        "x-deprecation": {
          "ProposedAfter": "09/19/2016",
          "DeprecatedAfter": "10/19/2016",
          "ObsoleteAfter": "11/19/2016",
          "ReplacedBy": "Server/DeregisterGame"
        },
        "x-auth": "SecretKey",
        "x-requestType": "DeregisterGameRequest",
        "x-resultType": "DeregisterGameResponse",
        "x-AllInclusiveFlags": [
          "Beta"
        ],
        "x-seeAlso": [
          "Server/DeregisterGame",
          "Server/RegisterGame"
        ],
        "x-errors": [
          "InvalidParams"
        ]
      }
    },
    "/Matchmaker/PlayerJoined": {
      "post": {
        "tags": [
          "Matchmaking"
        ],
        "summary": "Informs the PlayFab game server hosting service that the indicated user has joined the Game Server Instance specified",
        "description": "Informs the PlayFab game server hosting service that the indicated user has joined the Game Server Instance specified",
        "externalDocs": {
          "url": "https://api.playfab.com/documentation/Matchmaker/Method/PlayerJoined"
        },
        "parameters": [
          {
            "$ref": "#/definitions/PlayerJoinedRequest"
          }
        ],
        "security": [
          {
            "SecretKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The basic wrapper around all successful api calls",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": ""
                },
                "status": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "$ref": "#/responses/PlayerJoinedResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ApiErrorWrapper"
          }
        },
        "x-auth": "SecretKey",
        "x-requestType": "PlayerJoinedRequest",
        "x-resultType": "PlayerJoinedResponse",
        "x-seeAlso": [
          "Matchmaker/AuthUser",
          "Matchmaker/PlayerLeft",
          "Matchmaker/StartGame",
          "Matchmaker/UserInfo"
        ],
        "x-errors": [
          "InvalidParams"
        ]
      }
    },
    "/Matchmaker/PlayerLeft": {
      "post": {
        "tags": [
          "Matchmaking"
        ],
        "summary": "Informs the PlayFab game server hosting service that the indicated user has left the Game Server Instance specified",
        "description": "Informs the PlayFab game server hosting service that the indicated user has left the Game Server Instance specified",
        "externalDocs": {
          "url": "https://api.playfab.com/documentation/Matchmaker/Method/PlayerLeft"
        },
        "parameters": [
          {
            "$ref": "#/definitions/PlayerLeftRequest"
          }
        ],
        "security": [
          {
            "SecretKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The basic wrapper around all successful api calls",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": ""
                },
                "status": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "$ref": "#/responses/PlayerLeftResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ApiErrorWrapper"
          }
        },
        "x-auth": "SecretKey",
        "x-requestType": "PlayerLeftRequest",
        "x-resultType": "PlayerLeftResponse",
        "x-seeAlso": [
          "Matchmaker/AuthUser",
          "Matchmaker/PlayerJoined",
          "Matchmaker/StartGame",
          "Matchmaker/UserInfo"
        ],
        "x-errors": [
          "InvalidParams"
        ]
      }
    },
    "/Matchmaker/RegisterGame": {
      "post": {
        "tags": [
          "Matchmaking"
        ],
        "summary": "Inform the matchmaker that a new Game Server Instance is added.",
        "description": "Inform the matchmaker that a new Game Server Instance is added.",
        "externalDocs": {
          "url": "https://api.playfab.com/documentation/Matchmaker/Method/RegisterGame"
        },
        "parameters": [
          {
            "$ref": "#/definitions/RegisterGameRequest"
          }
        ],
        "security": [
          {
            "SecretKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The basic wrapper around all successful api calls",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": ""
                },
                "status": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "$ref": "#/responses/RegisterGameResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ApiErrorWrapper"
          }
        },
        "x-deprecation": {
          "ProposedAfter": "09/19/2016",
          "DeprecatedAfter": "10/19/2016",
          "ObsoleteAfter": "11/19/2016",
          "ReplacedBy": "Server/RegisterGame"
        },
        "x-auth": "SecretKey",
        "x-requestType": "RegisterGameRequest",
        "x-resultType": "RegisterGameResponse",
        "x-AllInclusiveFlags": [
          "Beta"
        ],
        "x-seeAlso": [
          "Server/DeregisterGame",
          "Server/RegisterGame"
        ],
        "x-errors": [
          "BuildNotFound",
          "InvalidParams",
          "InvalidRequest"
        ]
      }
    },
    "/Matchmaker/StartGame": {
      "post": {
        "tags": [
          "Matchmaking"
        ],
        "summary": "Instructs the PlayFab game server hosting service to instantiate a new Game Server Instance",
        "description": "Instructs the PlayFab game server hosting service to instantiate a new Game Server Instance",
        "externalDocs": {
          "url": "https://api.playfab.com/documentation/Matchmaker/Method/StartGame"
        },
        "parameters": [
          {
            "$ref": "#/definitions/StartGameRequest"
          }
        ],
        "security": [
          {
            "SecretKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The basic wrapper around all successful api calls",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": ""
                },
                "status": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "$ref": "#/responses/StartGameResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ApiErrorWrapper"
          }
        },
        "x-auth": "SecretKey",
        "x-requestType": "StartGameRequest",
        "x-resultType": "StartGameResponse",
        "x-seeAlso": [
          "Matchmaker/AuthUser",
          "Matchmaker/PlayerJoined",
          "Matchmaker/PlayerLeft",
          "Matchmaker/UserInfo"
        ],
        "x-errors": [
          "BuildNotFound",
          "InvalidParams"
        ]
      }
    },
    "/Matchmaker/UserInfo": {
      "post": {
        "tags": [
          "Matchmaking"
        ],
        "summary": "Retrieves the relevant details for a specified user, which the external match-making service can then use to compute effective matches",
        "description": "Retrieves the relevant details for a specified user, which the external match-making service can then use to compute effective matches",
        "externalDocs": {
          "url": "https://api.playfab.com/documentation/Matchmaker/Method/UserInfo"
        },
        "parameters": [
          {
            "$ref": "#/definitions/UserInfoRequest"
          }
        ],
        "security": [
          {
            "SecretKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The basic wrapper around all successful api calls",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": ""
                },
                "status": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "$ref": "#/responses/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ApiErrorWrapper"
          }
        },
        "x-auth": "SecretKey",
        "x-requestType": "UserInfoRequest",
        "x-resultType": "UserInfoResponse",
        "x-seeAlso": [
          "Matchmaker/AuthUser",
          "Matchmaker/PlayerJoined",
          "Matchmaker/PlayerLeft",
          "Matchmaker/StartGame"
        ],
        "x-errors": [
          "InvalidParams"
        ]
      }
    }
  },
  "definitions": {
    "AuthUserRequest": {
      "type": "object",
      "properties": {
        "AuthorizationTicket": {
          "description": "Session Ticket provided by the client.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        }
      },
      "x-ClassName": "AuthUserRequest"
    },
    "AuthUserResponse": {
      "type": "object",
      "properties": {
        "Authorized": {
          "description": "Boolean indicating if the user has been authorized to use the external match-making service.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean",
          "x-optional": false
        },
        "PlayFabId": {
          "description": "PlayFab unique identifier of the account that has been authorized.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        }
      },
      "x-ClassName": "AuthUserResponse"
    },
    "DeregisterGameRequest": {
      "type": "object",
      "properties": {
        "LobbyId": {
          "description": "Unique identifier for the Game Server Instance that is being deregistered.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        }
      },
      "x-ClassName": "DeregisterGameRequest",
      "x-AnyInclusiveFlags": [
        "Beta"
      ],
      "x-deprecation": {
        "ProposedAfter": "09/19/2016",
        "DeprecatedAfter": "10/19/2016",
        "ObsoleteAfter": "11/19/2016"
      }
    },
    "DeregisterGameResponse": {
      "type": "object",
      "properties": {},
      "x-ClassName": "DeregisterGameResponse",
      "x-AnyInclusiveFlags": [
        "Beta"
      ],
      "x-deprecation": {
        "ProposedAfter": "09/19/2016",
        "DeprecatedAfter": "10/19/2016",
        "ObsoleteAfter": "11/19/2016"
      }
    },
    "ItemInstance": {
      "description": "A unique instance of an item in a user's inventory. Note, to retrieve additional information for an item instance (such as Tags, Description, or Custom Data that are set on the root catalog item), a call to GetCatalogItems is required. The Item ID of the instance can then be matched to a catalog entry, which contains the additional information. Also note that Custom Data is only set here from a call to UpdateUserInventoryItemCustomData.",
      "type": "object",
      "properties": {
        "Annotation": {
          "description": "Game specific comment associated with this instance when it was added to the user inventory.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "BundleContents": {
          "description": "Array of unique items that were awarded when this catalog item was purchased.",
          "x-collection": "array",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "BundleParent": {
          "description": "Unique identifier for the parent inventory item, as defined in the catalog, for object which were added from a bundle or container.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "CatalogVersion": {
          "description": "Catalog version for the inventory item, when this instance was created.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "CustomData": {
          "description": "A set of custom key-value pairs on the inventory item.",
          "x-collection": "map",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "DisplayName": {
          "description": "CatalogItem.DisplayName at the time this item was purchased.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "Expiration": {
          "description": "Timestamp for when this instance will expire.",
          "x-jsontype": "String",
          "x-actualtype": "DateTime",
          "x-optional": true
        },
        "ItemClass": {
          "description": "Class name for the inventory item, as defined in the catalog.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "ItemId": {
          "description": "Unique identifier for the inventory item, as defined in the catalog.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "ItemInstanceId": {
          "description": "Unique item identifier for this specific instance of the item.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "PurchaseDate": {
          "description": "Timestamp for when this instance was purchased.",
          "x-jsontype": "String",
          "x-actualtype": "DateTime",
          "x-optional": true
        },
        "RemainingUses": {
          "description": "Total number of remaining uses, if this is a consumable item.",
          "x-jsontype": "Number",
          "x-actualtype": "int32",
          "x-optional": true
        },
        "UnitCurrency": {
          "description": "Currency type for the cost of the catalog item.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "UnitPrice": {
          "description": "Cost of the catalog item in the given currency.",
          "x-jsontype": "Number",
          "x-actualtype": "uint32",
          "x-optional": false
        },
        "UsesIncrementedBy": {
          "description": "The number of uses that were added or removed to this item in this call.",
          "x-jsontype": "Number",
          "x-actualtype": "int32",
          "x-optional": true
        }
      },
      "x-ClassName": "ItemInstance",
      "x-sortKey": "ItemInstanceId"
    },
    "PlayerJoinedRequest": {
      "type": "object",
      "properties": {
        "LobbyId": {
          "description": "Unique identifier of the Game Server Instance the user is joining. This must be a Game Server Instance started with the Matchmaker/StartGame API.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "PlayFabId": {
          "description": "PlayFab unique identifier for the player joining.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        }
      },
      "x-ClassName": "PlayerJoinedRequest"
    },
    "PlayerJoinedResponse": {
      "type": "object",
      "properties": {},
      "x-ClassName": "PlayerJoinedResponse"
    },
    "PlayerLeftRequest": {
      "type": "object",
      "properties": {
        "LobbyId": {
          "description": "Unique identifier of the Game Server Instance the user is leaving. This must be a Game Server Instance started with the Matchmaker/StartGame API.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "PlayFabId": {
          "description": "PlayFab unique identifier for the player leaving.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        }
      },
      "x-ClassName": "PlayerLeftRequest"
    },
    "PlayerLeftResponse": {
      "type": "object",
      "properties": {},
      "x-ClassName": "PlayerLeftResponse"
    },
    "Region": {
      "type": "object",
      "enum": [
        "USCentral",
        "USEast",
        "EUWest",
        "Singapore",
        "Japan",
        "Brazil",
        "Australia"
      ],
      "x-ClassName": "Region"
    },
    "RegisterGameRequest": {
      "type": "object",
      "properties": {
        "Build": {
          "description": "Unique identifier of the build running on the Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "GameMode": {
          "description": "Game Mode the Game Server instance is running. Note that this must be defined in the Game Modes tab in the PlayFab Game Manager, along with the Build ID (the same Game Mode can be defined for multiple Build IDs).",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "LobbyId": {
          "description": "Previous lobby id if re-registering an existing game.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "Region": {
          "description": "Region in which the Game Server Instance is running. For matchmaking using non-AWS region names, set this to any AWS region and use Tags (below) to specify your custom region.",
          "x-jsontype": "String",
          "x-actualtype": "Region",
          "$ref": "#/definitions/Region",
          "x-isenum": true,
          "x-optional": false
        },
        "ServerHost": {
          "description": "IPV4 address of the Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "ServerIPV6Address": {
          "description": "IPV6 address of the Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "ServerPort": {
          "description": "Port number for communication with the Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "Tags": {
          "description": "Tags for the Game Server Instance",
          "x-collection": "map",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        }
      },
      "x-ClassName": "RegisterGameRequest",
      "x-AnyInclusiveFlags": [
        "Beta"
      ],
      "x-deprecation": {
        "ProposedAfter": "09/19/2016",
        "DeprecatedAfter": "10/19/2016",
        "ObsoleteAfter": "11/19/2016"
      }
    },
    "RegisterGameResponse": {
      "type": "object",
      "properties": {
        "LobbyId": {
          "description": "Unique identifier generated for the Game Server Instance that is registered. If LobbyId is specified in request and the game still exists in PlayFab, the LobbyId in request is returned. Otherwise a new lobby id will be returned.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        }
      },
      "x-ClassName": "RegisterGameResponse",
      "x-AnyInclusiveFlags": [
        "Beta"
      ],
      "x-deprecation": {
        "ProposedAfter": "09/19/2016",
        "DeprecatedAfter": "10/19/2016",
        "ObsoleteAfter": "11/19/2016"
      }
    },
    "StartGameRequest": {
      "type": "object",
      "properties": {
        "Build": {
          "description": "Unique identifier of the previously uploaded build executable which is to be started.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "CustomCommandLineData": {
          "description": "Custom command line argument when starting game server process.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "ExternalMatchmakerEventEndpoint": {
          "description": "HTTP endpoint URL for receiving game status events, if using an external matchmaker. When the game ends, PlayFab will make a POST request to this URL with the X-SecretKey header set to the value of the game's secret and an application/json body of { \"EventName\": \"game_ended\", \"GameID\": \"<gameid>\" }.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "GameMode": {
          "description": "Game mode for this Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        },
        "Region": {
          "description": "Region with which to associate the server, for filtering.",
          "x-jsontype": "String",
          "x-actualtype": "Region",
          "$ref": "#/definitions/Region",
          "x-isenum": true,
          "x-optional": false
        }
      },
      "x-ClassName": "StartGameRequest"
    },
    "StartGameResponse": {
      "type": "object",
      "properties": {
        "GameID": {
          "description": "Unique identifier for the game/lobby in the new Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "ServerHostname": {
          "description": "IPV4 address of the new Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "ServerIPV6Address": {
          "description": "IPV6 address of the new Game Server Instance.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "ServerPort": {
          "description": "Port number for communication with the Game Server Instance.",
          "x-jsontype": "Number",
          "x-actualtype": "uint32",
          "x-optional": false
        }
      },
      "x-ClassName": "StartGameResponse"
    },
    "UserInfoRequest": {
      "type": "object",
      "properties": {
        "MinCatalogVersion": {
          "description": "Minimum catalog version for which data is requested (filters the results to only contain inventory items which have a catalog version of this or higher).",
          "x-jsontype": "Number",
          "x-actualtype": "int32",
          "x-optional": false
        },
        "PlayFabId": {
          "description": "PlayFab unique identifier of the user whose information is being requested.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": false
        }
      },
      "x-ClassName": "UserInfoRequest"
    },
    "UserInfoResponse": {
      "type": "object",
      "properties": {
        "Inventory": {
          "description": "Array of inventory items in the user's current inventory.",
          "x-collection": "array",
          "x-isUnordered": true,
          "x-jsontype": "Object",
          "x-actualtype": "ItemInstance",
          "$ref": "#/definitions/ItemInstance",
          "x-isclass": true,
          "example": {},
          "x-optional": true
        },
        "IsDeveloper": {
          "description": "Boolean indicating whether the user is a developer.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean",
          "x-optional": false
        },
        "PlayFabId": {
          "description": "PlayFab unique identifier of the user whose information was requested.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "SteamId": {
          "description": "Steam unique identifier, if the user has an associated Steam account.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "TitleDisplayName": {
          "description": "Title specific display name, if set.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "Username": {
          "description": "PlayFab unique user name.",
          "x-jsontype": "String",
          "x-actualtype": "String",
          "x-optional": true
        },
        "VirtualCurrency": {
          "description": "Array of virtual currency balance(s) belonging to the user.",
          "x-collection": "map",
          "x-jsontype": "Number",
          "x-actualtype": "int32",
          "x-optional": true
        },
        "VirtualCurrencyRechargeTimes": {
          "description": "Array of remaining times and timestamps for virtual currencies.",
          "x-collection": "map",
          "x-jsontype": "Object",
          "x-actualtype": "VirtualCurrencyRechargeTime",
          "$ref": "#/definitions/VirtualCurrencyRechargeTime",
          "x-isclass": true,
          "example": {},
          "x-optional": true
        }
      },
      "x-ClassName": "UserInfoResponse"
    },
    "VirtualCurrencyRechargeTime": {
      "type": "object",
      "properties": {
        "RechargeMax": {
          "description": "Maximum value to which the regenerating currency will automatically increment. Note that it can exceed this value through use of the AddUserVirtualCurrency API call. However, it will not regenerate automatically until it has fallen below this value.",
          "x-jsontype": "Number",
          "x-actualtype": "int32",
          "x-optional": false
        },
        "RechargeTime": {
          "description": "Server timestamp in UTC indicating the next time the virtual currency will be incremented.",
          "x-jsontype": "String",
          "x-actualtype": "DateTime",
          "x-optional": false
        },
        "SecondsToRecharge": {
          "description": "Time remaining (in seconds) before the next recharge increment of the virtual currency.",
          "x-jsontype": "Number",
          "x-actualtype": "int32",
          "x-optional": false
        }
      },
      "x-ClassName": "VirtualCurrencyRechargeTime"
    }
  },
  "responses": {
    "ApiErrorWrapper": {
      "description": "This is the outer-wrapper for all successful results",
      "schema": {
        "$ref": "#/definitions/ApiErrorWrapper"
      }
    },
    "AuthUserResponse": {
      "description": "TODO: Each Response Description",
      "schema": {
        "$ref": "#/definitions/AuthUserResponse"
      }
    },
    "UserInfoResponse": {
      "description": "TODO: Each Response Description",
      "schema": {
        "$ref": "#/definitions/UserInfoResponse"
      }
    },
    "StartGameResponse": {
      "description": "TODO: Each Response Description",
      "schema": {
        "$ref": "#/definitions/StartGameResponse"
      }
    },
    "PlayerJoinedResponse": {
      "description": "TODO: Each Response Description",
      "schema": {
        "$ref": "#/definitions/PlayerJoinedResponse"
      }
    },
    "PlayerLeftResponse": {
      "description": "TODO: Each Response Description",
      "schema": {
        "$ref": "#/definitions/PlayerLeftResponse"
      }
    },
    "RegisterGameResponse": {
      "description": "TODO: Each Response Description",
      "schema": {
        "$ref": "#/definitions/RegisterGameResponse"
      }
    },
    "DeregisterGameResponse": {
      "description": "TODO: Each Response Description",
      "schema": {
        "$ref": "#/definitions/DeregisterGameResponse"
      }
    }
  },
  "tags": [
    {
      "name": "Matchmaking",
      "description": "https://api.playfab.com/documentation/Matchmaker#Matchmaking"
    }
  ],
  "securityDefinitions": {
    "SessionTicket": {
      "type": "apiKey",
      "in": "header",
      "name": "SessionTicket",
      "description": "This API requires a client session ticket, available from any Client Login function."
    },
    "SecretKey": {
      "type": "apiKey",
      "in": "header",
      "name": "SecretKey",
      "description": "This API requires a title secret key, available to title admins, from PlayFab Game Manager."
    },
    "EntityToken": {
      "type": "apiKey",
      "in": "header",
      "name": "EntityToken",
      "description": "This API requires an Entity Session Token, available from the Entity GetEntityToken method."
    }
  },
  "x-errors": {
    "Success": {
      "name": "Success"
    },
    "UnkownError": {
      "id": 500,
      "name": "UnkownError"
    },
    "InvalidParams": {
      "id": 1000,
      "name": "InvalidParams"
    },
    "AccountNotFound": {
      "id": 1001,
      "name": "AccountNotFound"
    },
    "AccountBanned": {
      "id": 1002,
      "name": "AccountBanned"
    },
    "InvalidUsernameOrPassword": {
      "id": 1003,
      "name": "InvalidUsernameOrPassword"
    },
    "InvalidTitleId": {
      "id": 1004,
      "name": "InvalidTitleId"
    },
    "InvalidEmailAddress": {
      "id": 1005,
      "name": "InvalidEmailAddress"
    },
    "EmailAddressNotAvailable": {
      "id": 1006,
      "name": "EmailAddressNotAvailable"
    },
    "InvalidUsername": {
      "id": 1007,
      "name": "InvalidUsername"
    },
    "InvalidPassword": {
      "id": 1008,
      "name": "InvalidPassword"
    },
    "UsernameNotAvailable": {
      "id": 1009,
      "name": "UsernameNotAvailable"
    },
    "InvalidSteamTicket": {
      "id": 1010,
      "name": "InvalidSteamTicket"
    },
    "AccountAlreadyLinked": {
      "id": 1011,
      "name": "AccountAlreadyLinked"
    },
    "LinkedAccountAlreadyClaimed": {
      "id": 1012,
      "name": "LinkedAccountAlreadyClaimed"
    },
    "InvalidFacebookToken": {
      "id": 1013,
      "name": "InvalidFacebookToken"
    },
    "AccountNotLinked": {
      "id": 1014,
      "name": "AccountNotLinked"
    },
    "FailedByPaymentProvider": {
      "id": 1015,
      "name": "FailedByPaymentProvider"
    },
    "CouponCodeNotFound": {
      "id": 1016,
      "name": "CouponCodeNotFound"
    },
    "InvalidContainerItem": {
      "id": 1017,
      "name": "InvalidContainerItem"
    },
    "ContainerNotOwned": {
      "id": 1018,
      "name": "ContainerNotOwned"
    },
    "KeyNotOwned": {
      "id": 1019,
      "name": "KeyNotOwned"
    },
    "InvalidItemIdInTable": {
      "id": 1020,
      "name": "InvalidItemIdInTable"
    },
    "InvalidReceipt": {
      "id": 1021,
      "name": "InvalidReceipt"
    },
    "ReceiptAlreadyUsed": {
      "id": 1022,
      "name": "ReceiptAlreadyUsed"
    },
    "ReceiptCancelled": {
      "id": 1023,
      "name": "ReceiptCancelled"
    },
    "GameNotFound": {
      "id": 1024,
      "name": "GameNotFound"
    },
    "GameModeNotFound": {
      "id": 1025,
      "name": "GameModeNotFound"
    },
    "InvalidGoogleToken": {
      "id": 1026,
      "name": "InvalidGoogleToken"
    },
    "UserIsNotPartOfDeveloper": {
      "id": 1027,
      "name": "UserIsNotPartOfDeveloper"
    },
    "InvalidTitleForDeveloper": {
      "id": 1028,
      "name": "InvalidTitleForDeveloper"
    },
    "TitleNameConflicts": {
      "id": 1029,
      "name": "TitleNameConflicts"
    },
    "UserisNotValid": {
      "id": 1030,
      "name": "UserisNotValid"
    },
    "ValueAlreadyExists": {
      "id": 1031,
      "name": "ValueAlreadyExists"
    },
    "BuildNotFound": {
      "id": 1032,
      "name": "BuildNotFound"
    },
    "PlayerNotInGame": {
      "id": 1033,
      "name": "PlayerNotInGame"
    },
    "InvalidTicket": {
      "id": 1034,
      "name": "InvalidTicket"
    },
    "InvalidDeveloper": {
      "id": 1035,
      "name": "InvalidDeveloper"
    },
    "InvalidOrderInfo": {
      "id": 1036,
      "name": "InvalidOrderInfo"
    },
    "RegistrationIncomplete": {
      "id": 1037,
      "name": "RegistrationIncomplete"
    },
    "InvalidPlatform": {
      "id": 1038,
      "name": "InvalidPlatform"
    },
    "UnknownError": {
      "id": 1039,
      "name": "UnknownError"
    },
    "SteamApplicationNotOwned": {
      "id": 1040,
      "name": "SteamApplicationNotOwned"
    },
    "WrongSteamAccount": {
      "id": 1041,
      "name": "WrongSteamAccount"
    },
    "TitleNotActivated": {
      "id": 1042,
      "name": "TitleNotActivated"
    },
    "RegistrationSessionNotFound": {
      "id": 1043,
      "name": "RegistrationSessionNotFound"
    },
    "NoSuchMod": {
      "id": 1044,
      "name": "NoSuchMod"
    },
    "FileNotFound": {
      "id": 1045,
      "name": "FileNotFound"
    },
    "DuplicateEmail": {
      "id": 1046,
      "name": "DuplicateEmail"
    },
    "ItemNotFound": {
      "id": 1047,
      "name": "ItemNotFound"
    },
    "ItemNotOwned": {
      "id": 1048,
      "name": "ItemNotOwned"
    },
    "ItemNotRecycleable": {
      "id": 1049,
      "name": "ItemNotRecycleable"
    },
    "ItemNotAffordable": {
      "id": 1050,
      "name": "ItemNotAffordable"
    },
    "InvalidVirtualCurrency": {
      "id": 1051,
      "name": "InvalidVirtualCurrency"
    },
    "WrongVirtualCurrency": {
      "id": 1052,
      "name": "WrongVirtualCurrency"
    },
    "WrongPrice": {
      "id": 1053,
      "name": "WrongPrice"
    },
    "NonPositiveValue": {
      "id": 1054,
      "name": "NonPositiveValue"
    },
    "InvalidRegion": {
      "id": 1055,
      "name": "InvalidRegion"
    },
    "RegionAtCapacity": {
      "id": 1056,
      "name": "RegionAtCapacity"
    },
    "ServerFailedToStart": {
      "id": 1057,
      "name": "ServerFailedToStart"
    },
    "NameNotAvailable": {
      "id": 1058,
      "name": "NameNotAvailable"
    },
    "InsufficientFunds": {
      "id": 1059,
      "name": "InsufficientFunds"
    },
    "InvalidDeviceID": {
      "id": 1060,
      "name": "InvalidDeviceID"
    },
    "InvalidPushNotificationToken": {
      "id": 1061,
      "name": "InvalidPushNotificationToken"
    },
    "NoRemainingUses": {
      "id": 1062,
      "name": "NoRemainingUses"
    },
    "InvalidPaymentProvider": {
      "id": 1063,
      "name": "InvalidPaymentProvider"
    },
    "PurchaseInitializationFailure": {
      "id": 1064,
      "name": "PurchaseInitializationFailure"
    },
    "DuplicateUsername": {
      "id": 1065,
      "name": "DuplicateUsername"
    },
    "InvalidBuyerInfo": {
      "id": 1066,
      "name": "InvalidBuyerInfo"
    },
    "NoGameModeParamsSet": {
      "id": 1067,
      "name": "NoGameModeParamsSet"
    },
    "BodyTooLarge": {
      "id": 1068,
      "name": "BodyTooLarge"
    },
    "ReservedWordInBody": {
      "id": 1069,
      "name": "ReservedWordInBody"
    },
    "InvalidTypeInBody": {
      "id": 1070,
      "name": "InvalidTypeInBody"
    },
    "InvalidRequest": {
      "id": 1071,
      "name": "InvalidRequest"
    },
    "ReservedEventName": {
      "id": 1072,
      "name": "ReservedEventName"
    },
    "InvalidUserStatistics": {
      "id": 1073,
      "name": "InvalidUserStatistics"
    },
    "NotAuthenticated": {
      "id": 1074,
      "name": "NotAuthenticated"
    },
    "StreamAlreadyExists": {
      "id": 1075,
      "name": "StreamAlreadyExists"
    },
    "ErrorCreatingStream": {
      "id": 1076,
      "name": "ErrorCreatingStream"
    },
    "StreamNotFound": {
      "id": 1077,
      "name": "StreamNotFound"
    },
    "InvalidAccount": {
      "id": 1078,
      "name": "InvalidAccount"
    },
    "PurchaseDoesNotExist": {
      "id": 1080,
      "name": "PurchaseDoesNotExist"
    },
    "InvalidPurchaseTransactionStatus": {
      "id": 1081,
      "name": "InvalidPurchaseTransactionStatus"
    },
    "APINotEnabledForGameClientAccess": {
      "id": 1082,
      "name": "APINotEnabledForGameClientAccess"
    },
    "NoPushNotificationARNForTitle": {
      "id": 1083,
      "name": "NoPushNotificationARNForTitle"
    },
    "BuildAlreadyExists": {
      "id": 1084,
      "name": "BuildAlreadyExists"
    },
    "BuildPackageDoesNotExist": {
      "id": 1085,
      "name": "BuildPackageDoesNotExist"
    },
    "CustomAnalyticsEventsNotEnabledForTitle": {
      "id": 1087,
      "name": "CustomAnalyticsEventsNotEnabledForTitle"
    },
    "InvalidSharedGroupId": {
      "id": 1088,
      "name": "InvalidSharedGroupId"
    },
    "NotAuthorized": {
      "id": 1089,
      "name": "NotAuthorized"
    },
    "MissingTitleGoogleProperties": {
      "id": 1090,
      "name": "MissingTitleGoogleProperties"
    },
    "InvalidItemProperties": {
      "id": 1091,
      "name": "InvalidItemProperties"
    },
    "InvalidPSNAuthCode": {
      "id": 1092,
      "name": "InvalidPSNAuthCode"
    },
    "InvalidItemId": {
      "id": 1093,
      "name": "InvalidItemId"
    },
    "PushNotEnabledForAccount": {
      "id": 1094,
      "name": "PushNotEnabledForAccount"
    },
    "PushServiceError": {
      "id": 1095,
      "name": "PushServiceError"
    },
    "ReceiptDoesNotContainInAppItems": {
      "id": 1096,
      "name": "ReceiptDoesNotContainInAppItems"
    },
    "ReceiptContainsMultipleInAppItems": {
      "id": 1097,
      "name": "ReceiptContainsMultipleInAppItems"
    },
    "InvalidBundleID": {
      "id": 1098,
      "name": "InvalidBundleID"
    },
    "JavascriptException": {
      "id": 1099,
      "name": "JavascriptException"
    },
    "InvalidSessionTicket": {
      "id": 1100,
      "name": "InvalidSessionTicket"
    },
    "UnableToConnectToDatabase": {
      "id": 1101,
      "name": "UnableToConnectToDatabase"
    },
    "InternalServerError": {
      "id": 1110,
      "name": "InternalServerError"
    },
    "InvalidReportDate": {
      "id": 1111,
      "name": "InvalidReportDate"
    },
    "ReportNotAvailable": {
      "id": 1112,
      "name": "ReportNotAvailable"
    },
    "DatabaseThroughputExceeded": {
      "id": 1113,
      "name": "DatabaseThroughputExceeded"
    },
    "InvalidGameTicket": {
      "id": 1115,
      "name": "InvalidGameTicket"
    },
    "ExpiredGameTicket": {
      "id": 1116,
      "name": "ExpiredGameTicket"
    },
    "GameTicketDoesNotMatchLobby": {
      "id": 1117,
      "name": "GameTicketDoesNotMatchLobby"
    },
    "LinkedDeviceAlreadyClaimed": {
      "id": 1118,
      "name": "LinkedDeviceAlreadyClaimed"
    },
    "DeviceAlreadyLinked": {
      "id": 1119,
      "name": "DeviceAlreadyLinked"
    },
    "DeviceNotLinked": {
      "id": 1120,
      "name": "DeviceNotLinked"
    },
    "PartialFailure": {
      "id": 1121,
      "name": "PartialFailure"
    },
    "PublisherNotSet": {
      "id": 1122,
      "name": "PublisherNotSet"
    },
    "ServiceUnavailable": {
      "id": 1123,
      "name": "ServiceUnavailable"
    },
    "VersionNotFound": {
      "id": 1124,
      "name": "VersionNotFound"
    },
    "RevisionNotFound": {
      "id": 1125,
      "name": "RevisionNotFound"
    },
    "InvalidPublisherId": {
      "id": 1126,
      "name": "InvalidPublisherId"
    },
    "DownstreamServiceUnavailable": {
      "id": 1127,
      "name": "DownstreamServiceUnavailable"
    },
    "APINotIncludedInTitleUsageTier": {
      "id": 1128,
      "name": "APINotIncludedInTitleUsageTier"
    },
    "DAULimitExceeded": {
      "id": 1129,
      "name": "DAULimitExceeded"
    },
    "APIRequestLimitExceeded": {
      "id": 1130,
      "name": "APIRequestLimitExceeded"
    },
    "InvalidAPIEndpoint": {
      "id": 1131,
      "name": "InvalidAPIEndpoint"
    },
    "BuildNotAvailable": {
      "id": 1132,
      "name": "BuildNotAvailable"
    },
    "ConcurrentEditError": {
      "id": 1133,
      "name": "ConcurrentEditError"
    },
    "ContentNotFound": {
      "id": 1134,
      "name": "ContentNotFound"
    },
    "CharacterNotFound": {
      "id": 1135,
      "name": "CharacterNotFound"
    },
    "CloudScriptNotFound": {
      "id": 1136,
      "name": "CloudScriptNotFound"
    },
    "ContentQuotaExceeded": {
      "id": 1137,
      "name": "ContentQuotaExceeded"
    },
    "InvalidCharacterStatistics": {
      "id": 1138,
      "name": "InvalidCharacterStatistics"
    },
    "PhotonNotEnabledForTitle": {
      "id": 1139,
      "name": "PhotonNotEnabledForTitle"
    },
    "PhotonApplicationNotFound": {
      "id": 1140,
      "name": "PhotonApplicationNotFound"
    },
    "PhotonApplicationNotAssociatedWithTitle": {
      "id": 1141,
      "name": "PhotonApplicationNotAssociatedWithTitle"
    },
    "InvalidEmailOrPassword": {
      "id": 1142,
      "name": "InvalidEmailOrPassword"
    },
    "FacebookAPIError": {
      "id": 1143,
      "name": "FacebookAPIError"
    },
    "InvalidContentType": {
      "id": 1144,
      "name": "InvalidContentType"
    },
    "KeyLengthExceeded": {
      "id": 1145,
      "name": "KeyLengthExceeded"
    },
    "DataLengthExceeded": {
      "id": 1146,
      "name": "DataLengthExceeded"
    },
    "TooManyKeys": {
      "id": 1147,
      "name": "TooManyKeys"
    },
    "FreeTierCannotHaveVirtualCurrency": {
      "id": 1148,
      "name": "FreeTierCannotHaveVirtualCurrency"
    },
    "MissingAmazonSharedKey": {
      "id": 1149,
      "name": "MissingAmazonSharedKey"
    },
    "AmazonValidationError": {
      "id": 1150,
      "name": "AmazonValidationError"
    },
    "InvalidPSNIssuerId": {
      "id": 1151,
      "name": "InvalidPSNIssuerId"
    },
    "PSNInaccessible": {
      "id": 1152,
      "name": "PSNInaccessible"
    },
    "ExpiredAuthToken": {
      "id": 1153,
      "name": "ExpiredAuthToken"
    },
    "FailedToGetEntitlements": {
      "id": 1154,
      "name": "FailedToGetEntitlements"
    },
    "FailedToConsumeEntitlement": {
      "id": 1155,
      "name": "FailedToConsumeEntitlement"
    },
    "TradeAcceptingUserNotAllowed": {
      "id": 1156,
      "name": "TradeAcceptingUserNotAllowed"
    },
    "TradeInventoryItemIsAssignedToCharacter": {
      "id": 1157,
      "name": "TradeInventoryItemIsAssignedToCharacter"
    },
    "TradeInventoryItemIsBundle": {
      "id": 1158,
      "name": "TradeInventoryItemIsBundle"
    },
    "TradeStatusNotValidForCancelling": {
      "id": 1159,
      "name": "TradeStatusNotValidForCancelling"
    },
    "TradeStatusNotValidForAccepting": {
      "id": 1160,
      "name": "TradeStatusNotValidForAccepting"
    },
    "TradeDoesNotExist": {
      "id": 1161,
      "name": "TradeDoesNotExist"
    },
    "TradeCancelled": {
      "id": 1162,
      "name": "TradeCancelled"
    },
    "TradeAlreadyFilled": {
      "id": 1163,
      "name": "TradeAlreadyFilled"
    },
    "TradeWaitForStatusTimeout": {
      "id": 1164,
      "name": "TradeWaitForStatusTimeout"
    },
    "TradeInventoryItemExpired": {
      "id": 1165,
      "name": "TradeInventoryItemExpired"
    },
    "TradeMissingOfferedAndAcceptedItems": {
      "id": 1166,
      "name": "TradeMissingOfferedAndAcceptedItems"
    },
    "TradeAcceptedItemIsBundle": {
      "id": 1167,
      "name": "TradeAcceptedItemIsBundle"
    },
    "TradeAcceptedItemIsStackable": {
      "id": 1168,
      "name": "TradeAcceptedItemIsStackable"
    },
    "TradeInventoryItemInvalidStatus": {
      "id": 1169,
      "name": "TradeInventoryItemInvalidStatus"
    },
    "TradeAcceptedCatalogItemInvalid": {
      "id": 1170,
      "name": "TradeAcceptedCatalogItemInvalid"
    },
    "TradeAllowedUsersInvalid": {
      "id": 1171,
      "name": "TradeAllowedUsersInvalid"
    },
    "TradeInventoryItemDoesNotExist": {
      "id": 1172,
      "name": "TradeInventoryItemDoesNotExist"
    },
    "TradeInventoryItemIsConsumed": {
      "id": 1173,
      "name": "TradeInventoryItemIsConsumed"
    },
    "TradeInventoryItemIsStackable": {
      "id": 1174,
      "name": "TradeInventoryItemIsStackable"
    },
    "TradeAcceptedItemsMismatch": {
      "id": 1175,
      "name": "TradeAcceptedItemsMismatch"
    },
    "InvalidKongregateToken": {
      "id": 1176,
      "name": "InvalidKongregateToken"
    },
    "FeatureNotConfiguredForTitle": {
      "id": 1177,
      "name": "FeatureNotConfiguredForTitle"
    },
    "NoMatchingCatalogItemForReceipt": {
      "id": 1178,
      "name": "NoMatchingCatalogItemForReceipt"
    },
    "InvalidCurrencyCode": {
      "id": 1179,
      "name": "InvalidCurrencyCode"
    },
    "NoRealMoneyPriceForCatalogItem": {
      "id": 1180,
      "name": "NoRealMoneyPriceForCatalogItem"
    },
    "TradeInventoryItemIsNotTradable": {
      "id": 1181,
      "name": "TradeInventoryItemIsNotTradable"
    },
    "TradeAcceptedCatalogItemIsNotTradable": {
      "id": 1182,
      "name": "TradeAcceptedCatalogItemIsNotTradable"
    },
    "UsersAlreadyFriends": {
      "id": 1183,
      "name": "UsersAlreadyFriends"
    },
    "LinkedIdentifierAlreadyClaimed": {
      "id": 1184,
      "name": "LinkedIdentifierAlreadyClaimed"
    },
    "CustomIdNotLinked": {
      "id": 1185,
      "name": "CustomIdNotLinked"
    },
    "TotalDataSizeExceeded": {
      "id": 1186,
      "name": "TotalDataSizeExceeded"
    },
    "DeleteKeyConflict": {
      "id": 1187,
      "name": "DeleteKeyConflict"
    },
    "InvalidXboxLiveToken": {
      "id": 1188,
      "name": "InvalidXboxLiveToken"
    },
    "ExpiredXboxLiveToken": {
      "id": 1189,
      "name": "ExpiredXboxLiveToken"
    },
    "ResettableStatisticVersionRequired": {
      "id": 1190,
      "name": "ResettableStatisticVersionRequired"
    },
    "NotAuthorizedByTitle": {
      "id": 1191,
      "name": "NotAuthorizedByTitle"
    },
    "NoPartnerEnabled": {
      "id": 1192,
      "name": "NoPartnerEnabled"
    },
    "InvalidPartnerResponse": {
      "id": 1193,
      "name": "InvalidPartnerResponse"
    },
    "APINotEnabledForGameServerAccess": {
      "id": 1194,
      "name": "APINotEnabledForGameServerAccess"
    },
    "StatisticNotFound": {
      "id": 1195,
      "name": "StatisticNotFound"
    },
    "StatisticNameConflict": {
      "id": 1196,
      "name": "StatisticNameConflict"
    },
    "StatisticVersionClosedForWrites": {
      "id": 1197,
      "name": "StatisticVersionClosedForWrites"
    },
    "StatisticVersionInvalid": {
      "id": 1198,
      "name": "StatisticVersionInvalid"
    },
    "APIClientRequestRateLimitExceeded": {
      "id": 1199,
      "name": "APIClientRequestRateLimitExceeded"
    },
    "InvalidJSONContent": {
      "id": 1200,
      "name": "InvalidJSONContent"
    },
    "InvalidDropTable": {
      "id": 1201,
      "name": "InvalidDropTable"
    },
    "StatisticVersionAlreadyIncrementedForScheduledInterval": {
      "id": 1202,
      "name": "StatisticVersionAlreadyIncrementedForScheduledInterval"
    },
    "StatisticCountLimitExceeded": {
      "id": 1203,
      "name": "StatisticCountLimitExceeded"
    },
    "StatisticVersionIncrementRateExceeded": {
      "id": 1204,
      "name": "StatisticVersionIncrementRateExceeded"
    },
    "ContainerKeyInvalid": {
      "id": 1205,
      "name": "ContainerKeyInvalid"
    },
    "CloudScriptExecutionTimeLimitExceeded": {
      "id": 1206,
      "name": "CloudScriptExecutionTimeLimitExceeded"
    },
    "NoWritePermissionsForEvent": {
      "id": 1207,
      "name": "NoWritePermissionsForEvent"
    },
    "CloudScriptFunctionArgumentSizeExceeded": {
      "id": 1208,
      "name": "CloudScriptFunctionArgumentSizeExceeded"
    },
    "CloudScriptAPIRequestCountExceeded": {
      "id": 1209,
      "name": "CloudScriptAPIRequestCountExceeded"
    },
    "CloudScriptAPIRequestError": {
      "id": 1210,
      "name": "CloudScriptAPIRequestError"
    },
    "CloudScriptHTTPRequestError": {
      "id": 1211,
      "name": "CloudScriptHTTPRequestError"
    },
    "InsufficientGuildRole": {
      "id": 1212,
      "name": "InsufficientGuildRole"
    },
    "GuildNotFound": {
      "id": 1213,
      "name": "GuildNotFound"
    },
    "OverLimit": {
      "id": 1214,
      "name": "OverLimit"
    },
    "EventNotFound": {
      "id": 1215,
      "name": "EventNotFound"
    },
    "InvalidEventField": {
      "id": 1216,
      "name": "InvalidEventField"
    },
    "InvalidEventName": {
      "id": 1217,
      "name": "InvalidEventName"
    },
    "CatalogNotConfigured": {
      "id": 1218,
      "name": "CatalogNotConfigured"
    },
    "OperationNotSupportedForPlatform": {
      "id": 1219,
      "name": "OperationNotSupportedForPlatform"
    },
    "SegmentNotFound": {
      "id": 1220,
      "name": "SegmentNotFound"
    },
    "StoreNotFound": {
      "id": 1221,
      "name": "StoreNotFound"
    },
    "InvalidStatisticName": {
      "id": 1222,
      "name": "InvalidStatisticName"
    },
    "TitleNotQualifiedForLimit": {
      "id": 1223,
      "name": "TitleNotQualifiedForLimit"
    },
    "InvalidServiceLimitLevel": {
      "id": 1224,
      "name": "InvalidServiceLimitLevel"
    },
    "ServiceLimitLevelInTransition": {
      "id": 1225,
      "name": "ServiceLimitLevelInTransition"
    },
    "CouponAlreadyRedeemed": {
      "id": 1226,
      "name": "CouponAlreadyRedeemed"
    },
    "GameServerBuildSizeLimitExceeded": {
      "id": 1227,
      "name": "GameServerBuildSizeLimitExceeded"
    },
    "GameServerBuildCountLimitExceeded": {
      "id": 1228,
      "name": "GameServerBuildCountLimitExceeded"
    },
    "VirtualCurrencyCountLimitExceeded": {
      "id": 1229,
      "name": "VirtualCurrencyCountLimitExceeded"
    },
    "VirtualCurrencyCodeExists": {
      "id": 1230,
      "name": "VirtualCurrencyCodeExists"
    },
    "TitleNewsItemCountLimitExceeded": {
      "id": 1231,
      "name": "TitleNewsItemCountLimitExceeded"
    },
    "InvalidTwitchToken": {
      "id": 1232,
      "name": "InvalidTwitchToken"
    },
    "TwitchResponseError": {
      "id": 1233,
      "name": "TwitchResponseError"
    },
    "ProfaneDisplayName": {
      "id": 1234,
      "name": "ProfaneDisplayName"
    },
    "UserAlreadyAdded": {
      "id": 1235,
      "name": "UserAlreadyAdded"
    },
    "InvalidVirtualCurrencyCode": {
      "id": 1236,
      "name": "InvalidVirtualCurrencyCode"
    },
    "VirtualCurrencyCannotBeDeleted": {
      "id": 1237,
      "name": "VirtualCurrencyCannotBeDeleted"
    },
    "IdentifierAlreadyClaimed": {
      "id": 1238,
      "name": "IdentifierAlreadyClaimed"
    },
    "IdentifierNotLinked": {
      "id": 1239,
      "name": "IdentifierNotLinked"
    },
    "InvalidContinuationToken": {
      "id": 1240,
      "name": "InvalidContinuationToken"
    },
    "ExpiredContinuationToken": {
      "id": 1241,
      "name": "ExpiredContinuationToken"
    },
    "InvalidSegment": {
      "id": 1242,
      "name": "InvalidSegment"
    },
    "InvalidSessionId": {
      "id": 1243,
      "name": "InvalidSessionId"
    },
    "SessionLogNotFound": {
      "id": 1244,
      "name": "SessionLogNotFound"
    },
    "InvalidSearchTerm": {
      "id": 1245,
      "name": "InvalidSearchTerm"
    },
    "TwoFactorAuthenticationTokenRequired": {
      "id": 1246,
      "name": "TwoFactorAuthenticationTokenRequired"
    },
    "GameServerHostCountLimitExceeded": {
      "id": 1247,
      "name": "GameServerHostCountLimitExceeded"
    },
    "PlayerTagCountLimitExceeded": {
      "id": 1248,
      "name": "PlayerTagCountLimitExceeded"
    },
    "RequestAlreadyRunning": {
      "id": 1249,
      "name": "RequestAlreadyRunning"
    },
    "ActionGroupNotFound": {
      "id": 1250,
      "name": "ActionGroupNotFound"
    },
    "MaximumSegmentBulkActionJobsRunning": {
      "id": 1251,
      "name": "MaximumSegmentBulkActionJobsRunning"
    },
    "NoActionsOnPlayersInSegmentJob": {
      "id": 1252,
      "name": "NoActionsOnPlayersInSegmentJob"
    },
    "DuplicateStatisticName": {
      "id": 1253,
      "name": "DuplicateStatisticName"
    },
    "ScheduledTaskNameConflict": {
      "id": 1254,
      "name": "ScheduledTaskNameConflict"
    },
    "ScheduledTaskCreateConflict": {
      "id": 1255,
      "name": "ScheduledTaskCreateConflict"
    },
    "InvalidScheduledTaskName": {
      "id": 1256,
      "name": "InvalidScheduledTaskName"
    },
    "InvalidTaskSchedule": {
      "id": 1257,
      "name": "InvalidTaskSchedule"
    },
    "SteamNotEnabledForTitle": {
      "id": 1258,
      "name": "SteamNotEnabledForTitle"
    },
    "LimitNotAnUpgradeOption": {
      "id": 1259,
      "name": "LimitNotAnUpgradeOption"
    },
    "NoSecretKeyEnabledForCloudScript": {
      "id": 1260,
      "name": "NoSecretKeyEnabledForCloudScript"
    },
    "TaskNotFound": {
      "id": 1261,
      "name": "TaskNotFound"
    },
    "TaskInstanceNotFound": {
      "id": 1262,
      "name": "TaskInstanceNotFound"
    },
    "InvalidIdentityProviderId": {
      "id": 1263,
      "name": "InvalidIdentityProviderId"
    },
    "MisconfiguredIdentityProvider": {
      "id": 1264,
      "name": "MisconfiguredIdentityProvider"
    },
    "InvalidScheduledTaskType": {
      "id": 1265,
      "name": "InvalidScheduledTaskType"
    },
    "BillingInformationRequired": {
      "id": 1266,
      "name": "BillingInformationRequired"
    },
    "LimitedEditionItemUnavailable": {
      "id": 1267,
      "name": "LimitedEditionItemUnavailable"
    },
    "InvalidAdPlacementAndReward": {
      "id": 1268,
      "name": "InvalidAdPlacementAndReward"
    },
    "AllAdPlacementViewsAlreadyConsumed": {
      "id": 1269,
      "name": "AllAdPlacementViewsAlreadyConsumed"
    },
    "GoogleOAuthNotConfiguredForTitle": {
      "id": 1270,
      "name": "GoogleOAuthNotConfiguredForTitle"
    },
    "GoogleOAuthError": {
      "id": 1271,
      "name": "GoogleOAuthError"
    },
    "UserNotFriend": {
      "id": 1272,
      "name": "UserNotFriend"
    },
    "InvalidSignature": {
      "id": 1273,
      "name": "InvalidSignature"
    },
    "InvalidPublicKey": {
      "id": 1274,
      "name": "InvalidPublicKey"
    },
    "GoogleOAuthNoIdTokenIncludedInResponse": {
      "id": 1275,
      "name": "GoogleOAuthNoIdTokenIncludedInResponse"
    },
    "StatisticUpdateInProgress": {
      "id": 1276,
      "name": "StatisticUpdateInProgress"
    },
    "LeaderboardVersionNotAvailable": {
      "id": 1277,
      "name": "LeaderboardVersionNotAvailable"
    },
    "StatisticAlreadyHasPrizeTable": {
      "id": 1279,
      "name": "StatisticAlreadyHasPrizeTable"
    },
    "PrizeTableHasOverlappingRanks": {
      "id": 1280,
      "name": "PrizeTableHasOverlappingRanks"
    },
    "PrizeTableHasMissingRanks": {
      "id": 1281,
      "name": "PrizeTableHasMissingRanks"
    },
    "PrizeTableRankStartsAtZero": {
      "id": 1282,
      "name": "PrizeTableRankStartsAtZero"
    },
    "InvalidStatistic": {
      "id": 1283,
      "name": "InvalidStatistic"
    },
    "ExpressionParseFailure": {
      "id": 1284,
      "name": "ExpressionParseFailure"
    },
    "ExpressionInvokeFailure": {
      "id": 1285,
      "name": "ExpressionInvokeFailure"
    },
    "ExpressionTooLong": {
      "id": 1286,
      "name": "ExpressionTooLong"
    },
    "DataUpdateRateExceeded": {
      "id": 1287,
      "name": "DataUpdateRateExceeded"
    },
    "RestrictedEmailDomain": {
      "id": 1288,
      "name": "RestrictedEmailDomain"
    },
    "EncryptionKeyDisabled": {
      "id": 1289,
      "name": "EncryptionKeyDisabled"
    },
    "EncryptionKeyMissing": {
      "id": 1290,
      "name": "EncryptionKeyMissing"
    },
    "EncryptionKeyBroken": {
      "id": 1291,
      "name": "EncryptionKeyBroken"
    },
    "NoSharedSecretKeyConfigured": {
      "id": 1292,
      "name": "NoSharedSecretKeyConfigured"
    },
    "SecretKeyNotFound": {
      "id": 1293,
      "name": "SecretKeyNotFound"
    },
    "PlayerSecretAlreadyConfigured": {
      "id": 1294,
      "name": "PlayerSecretAlreadyConfigured"
    },
    "APIRequestsDisabledForTitle": {
      "id": 1295,
      "name": "APIRequestsDisabledForTitle"
    },
    "InvalidSharedSecretKey": {
      "id": 1296,
      "name": "InvalidSharedSecretKey"
    },
    "PrizeTableHasNoRanks": {
      "id": 1297,
      "name": "PrizeTableHasNoRanks"
    },
    "ProfileDoesNotExist": {
      "id": 1298,
      "name": "ProfileDoesNotExist"
    },
    "ContentS3OriginBucketNotConfigured": {
      "id": 1299,
      "name": "ContentS3OriginBucketNotConfigured"
    },
    "InvalidEnvironmentForReceipt": {
      "id": 1300,
      "name": "InvalidEnvironmentForReceipt"
    },
    "EncryptedRequestNotAllowed": {
      "id": 1301,
      "name": "EncryptedRequestNotAllowed"
    },
    "SignedRequestNotAllowed": {
      "id": 1302,
      "name": "SignedRequestNotAllowed"
    },
    "RequestViewConstraintParamsNotAllowed": {
      "id": 1303,
      "name": "RequestViewConstraintParamsNotAllowed"
    },
    "BadPartnerConfiguration": {
      "id": 1304,
      "name": "BadPartnerConfiguration"
    },
    "XboxBPCertificateFailure": {
      "id": 1305,
      "name": "XboxBPCertificateFailure"
    },
    "XboxXASSExchangeFailure": {
      "id": 1306,
      "name": "XboxXASSExchangeFailure"
    },
    "InvalidEntityId": {
      "id": 1307,
      "name": "InvalidEntityId"
    },
    "StatisticValueAggregationOverflow": {
      "id": 1308,
      "name": "StatisticValueAggregationOverflow"
    },
    "EmailMessageFromAddressIsMissing": {
      "id": 1309,
      "name": "EmailMessageFromAddressIsMissing"
    },
    "EmailMessageToAddressIsMissing": {
      "id": 1310,
      "name": "EmailMessageToAddressIsMissing"
    },
    "SmtpServerAuthenticationError": {
      "id": 1311,
      "name": "SmtpServerAuthenticationError"
    },
    "SmtpServerLimitExceeded": {
      "id": 1312,
      "name": "SmtpServerLimitExceeded"
    },
    "SmtpServerInsufficientStorage": {
      "id": 1313,
      "name": "SmtpServerInsufficientStorage"
    },
    "SmtpServerCommunicationError": {
      "id": 1314,
      "name": "SmtpServerCommunicationError"
    },
    "SmtpServerGeneralFailure": {
      "id": 1315,
      "name": "SmtpServerGeneralFailure"
    },
    "EmailClientTimeout": {
      "id": 1316,
      "name": "EmailClientTimeout"
    },
    "EmailClientCanceledTask": {
      "id": 1317,
      "name": "EmailClientCanceledTask"
    },
    "EmailTemplateMissing": {
      "id": 1318,
      "name": "EmailTemplateMissing"
    },
    "InvalidHostForTitleId": {
      "id": 1319,
      "name": "InvalidHostForTitleId"
    },
    "EmailConfirmationTokenDoesNotExist": {
      "id": 1320,
      "name": "EmailConfirmationTokenDoesNotExist"
    },
    "EmailConfirmationTokenExpired": {
      "id": 1321,
      "name": "EmailConfirmationTokenExpired"
    },
    "AccountDeleted": {
      "id": 1322,
      "name": "AccountDeleted"
    },
    "PlayerSecretNotConfigured": {
      "id": 1323,
      "name": "PlayerSecretNotConfigured"
    },
    "InvalidSignatureTime": {
      "id": 1324,
      "name": "InvalidSignatureTime"
    },
    "NoContactEmailAddressFound": {
      "id": 1325,
      "name": "NoContactEmailAddressFound"
    },
    "InvalidAuthToken": {
      "id": 1326,
      "name": "InvalidAuthToken"
    },
    "AuthTokenDoesNotExist": {
      "id": 1327,
      "name": "AuthTokenDoesNotExist"
    },
    "AuthTokenExpired": {
      "id": 1328,
      "name": "AuthTokenExpired"
    },
    "AuthTokenAlreadyUsedToResetPassword": {
      "id": 1329,
      "name": "AuthTokenAlreadyUsedToResetPassword"
    },
    "MembershipNameTooLong": {
      "id": 1330,
      "name": "MembershipNameTooLong"
    },
    "MembershipNotFound": {
      "id": 1331,
      "name": "MembershipNotFound"
    },
    "GoogleServiceAccountInvalid": {
      "id": 1332,
      "name": "GoogleServiceAccountInvalid"
    },
    "GoogleServiceAccountParseFailure": {
      "id": 1333,
      "name": "GoogleServiceAccountParseFailure"
    },
    "EntityTokenMissing": {
      "id": 1334,
      "name": "EntityTokenMissing"
    },
    "EntityTokenInvalid": {
      "id": 1335,
      "name": "EntityTokenInvalid"
    },
    "EntityTokenExpired": {
      "id": 1336,
      "name": "EntityTokenExpired"
    },
    "EntityTokenRevoked": {
      "id": 1337,
      "name": "EntityTokenRevoked"
    },
    "InvalidProductForSubscription": {
      "id": 1338,
      "name": "InvalidProductForSubscription"
    },
    "XboxInaccessible": {
      "id": 1339,
      "name": "XboxInaccessible"
    },
    "SubscriptionAlreadyTaken": {
      "id": 1340,
      "name": "SubscriptionAlreadyTaken"
    },
    "SmtpAddonNotEnabled": {
      "id": 1341,
      "name": "SmtpAddonNotEnabled"
    },
    "APIConcurrentRequestLimitExceeded": {
      "id": 1342,
      "name": "APIConcurrentRequestLimitExceeded"
    },
    "XboxRejectedXSTSExchangeRequest": {
      "id": 1343,
      "name": "XboxRejectedXSTSExchangeRequest"
    },
    "VariableNotDefined": {
      "id": 1344,
      "name": "VariableNotDefined"
    },
    "TemplateVersionNotDefined": {
      "id": 1345,
      "name": "TemplateVersionNotDefined"
    },
    "FileTooLarge": {
      "id": 1346,
      "name": "FileTooLarge"
    },
    "TitleDeleted": {
      "id": 1347,
      "name": "TitleDeleted"
    },
    "TitleContainsUserAccounts": {
      "id": 1348,
      "name": "TitleContainsUserAccounts"
    },
    "TitleDeletionPlayerCleanupFailure": {
      "id": 1349,
      "name": "TitleDeletionPlayerCleanupFailure"
    },
    "EntityFileOperationPending": {
      "id": 1350,
      "name": "EntityFileOperationPending"
    },
    "NoEntityFileOperationPending": {
      "id": 1351,
      "name": "NoEntityFileOperationPending"
    },
    "EntityProfileVersionMismatch": {
      "id": 1352,
      "name": "EntityProfileVersionMismatch"
    },
    "TemplateVersionTooOld": {
      "id": 1353,
      "name": "TemplateVersionTooOld"
    },
    "MembershipDefinitionInUse": {
      "id": 1354,
      "name": "MembershipDefinitionInUse"
    },
    "PaymentPageNotConfigured": {
      "id": 1355,
      "name": "PaymentPageNotConfigured"
    },
    "FailedLoginAttemptRateLimitExceeded": {
      "id": 1356,
      "name": "FailedLoginAttemptRateLimitExceeded"
    },
    "EntityBlockedByGroup": {
      "id": 1357,
      "name": "EntityBlockedByGroup"
    },
    "RoleDoesNotExist": {
      "id": 1358,
      "name": "RoleDoesNotExist"
    },
    "EntityIsAlreadyMember": {
      "id": 1359,
      "name": "EntityIsAlreadyMember"
    },
    "DuplicateRoleId": {
      "id": 1360,
      "name": "DuplicateRoleId"
    },
    "GroupInvitationNotFound": {
      "id": 1361,
      "name": "GroupInvitationNotFound"
    },
    "GroupApplicationNotFound": {
      "id": 1362,
      "name": "GroupApplicationNotFound"
    },
    "OutstandingInvitationAcceptedInstead": {
      "id": 1363,
      "name": "OutstandingInvitationAcceptedInstead"
    },
    "OutstandingApplicationAcceptedInstead": {
      "id": 1364,
      "name": "OutstandingApplicationAcceptedInstead"
    },
    "RoleIsGroupDefaultMember": {
      "id": 1365,
      "name": "RoleIsGroupDefaultMember"
    },
    "RoleIsGroupAdmin": {
      "id": 1366,
      "name": "RoleIsGroupAdmin"
    },
    "RoleNameNotAvailable": {
      "id": 1367,
      "name": "RoleNameNotAvailable"
    },
    "GroupNameNotAvailable": {
      "id": 1368,
      "name": "GroupNameNotAvailable"
    },
    "EmailReportAlreadySent": {
      "id": 1369,
      "name": "EmailReportAlreadySent"
    },
    "EmailReportRecipientBlacklisted": {
      "id": 1370,
      "name": "EmailReportRecipientBlacklisted"
    },
    "EventNamespaceNotAllowed": {
      "id": 1371,
      "name": "EventNamespaceNotAllowed"
    },
    "EventEntityNotAllowed": {
      "id": 1372,
      "name": "EventEntityNotAllowed"
    },
    "InvalidEntityType": {
      "id": 1373,
      "name": "InvalidEntityType"
    },
    "NullTokenResultFromAad": {
      "id": 1374,
      "name": "NullTokenResultFromAad"
    },
    "InvalidTokenResultFromAad": {
      "id": 1375,
      "name": "InvalidTokenResultFromAad"
    },
    "NoValidCertificateForAad": {
      "id": 1376,
      "name": "NoValidCertificateForAad"
    },
    "InvalidCertificateForAad": {
      "id": 1377,
      "name": "InvalidCertificateForAad"
    },
    "DuplicateDropTableId": {
      "id": 1378,
      "name": "DuplicateDropTableId"
    },
    "ComputeOK": {
      "id": 1379,
      "name": "ComputeOK"
    },
    "ComputeAccepted": {
      "id": 1380,
      "name": "ComputeAccepted"
    },
    "ComputeNoContent": {
      "id": 1381,
      "name": "ComputeNoContent"
    },
    "ComputeBadRequest": {
      "id": 1382,
      "name": "ComputeBadRequest"
    },
    "ComputeUnauthorized": {
      "id": 1383,
      "name": "ComputeUnauthorized"
    },
    "ComputeForbidden": {
      "id": 1384,
      "name": "ComputeForbidden"
    },
    "ComputeNotFound": {
      "id": 1385,
      "name": "ComputeNotFound"
    },
    "ComputeConflict": {
      "id": 1386,
      "name": "ComputeConflict"
    },
    "ComputeInternalServerError": {
      "id": 1387,
      "name": "ComputeInternalServerError"
    },
    "ComputeServiceUnavailable": {
      "id": 1388,
      "name": "ComputeServiceUnavailable"
    }
  }
}