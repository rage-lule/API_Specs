{
  "ParentTypes": [
    {
      "Group": "none",
      "Classes": [
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is optionally triggered when an Entity CloudScript function is executed, either by calling the ExecuteCloudScript API with the GeneratePlayStreamEvent option or triggered by a PlayStream event action with the 'Publish results as a PlayStream Event' box checked.",
          "type": "object",
          "properties": {
            "CloudScriptExecutionResult": {
              "$ref": "#/definitions/ExecuteCloudScriptResult",
              "description": "Result of the CloudScript function, including diagnostic information that is useful for debugging.",
              "x-jsontype": "Object",
              "x-actualtype": "ExecuteCloudScriptResult",
              "x-isclass": true
            },
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "FunctionName": {
              "description": "Name of the CloudScript function that was called.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Files": {
              "$ref": "#/definitions/FileSet",
              "description": "The files that were updated.",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "FileSet",
              "x-isclass": true
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Objects": {
              "$ref": "#/definitions/ObjectSet",
              "description": "Objects that were updated",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "ObjectSet",
              "x-isclass": true
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "CreatorEntityId": {
              "description": "The identifier for the entity that created the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CreatorEntityType": {
              "description": "The type of entity that created the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "DeleterEntityId": {
              "description": "The identifier for the entity that deleted the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "DeleterEntityType": {
              "description": "The type of entity that deleted the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Members": {
              "$ref": "#/definitions/Member",
              "description": "The list of entities that were added to the group and role to which this event applies",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "Member",
              "x-isclass": true
            },
            "RoleId": {
              "description": "The role ID of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleName": {
              "description": "The display name of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Members": {
              "$ref": "#/definitions/Member",
              "description": "The list of entities that were removed from the group to which this event applies",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "Member",
              "x-isclass": true
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "CreatorEntityId": {
              "description": "The identifier for that the entity that created the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CreatorEntityType": {
              "description": "The type of entity that created the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleId": {
              "description": "The role ID of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleName": {
              "description": "The display name of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "DeleterEntityId": {
              "description": "The identifier for the entity that deleted the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "DeleterEntityType": {
              "description": "The type of entity that deleted the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleId": {
              "description": "The role ID of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleName": {
              "description": "The display name of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Members": {
              "$ref": "#/definitions/Member",
              "description": "The list of entities that were added to the group and role to which this event applies",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "Member",
              "x-isclass": true
            },
            "RoleId": {
              "description": "The role ID of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleName": {
              "description": "The display name of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Members": {
              "$ref": "#/definitions/Member",
              "description": "The list of entities that were removed from the group to which this event applies",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "Member",
              "x-isclass": true
            },
            "RoleId": {
              "description": "The role ID of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleName": {
              "description": "The display name of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "NewValues": {
              "$ref": "#/definitions/RolePropertyValues",
              "description": "The new values of the role's changed properties",
              "x-jsontype": "Object",
              "x-actualtype": "RolePropertyValues",
              "x-isclass": true
            },
            "OldValues": {
              "$ref": "#/definitions/RolePropertyValues",
              "description": "The previous values of the role's changed properties",
              "x-jsontype": "Object",
              "x-actualtype": "RolePropertyValues",
              "x-isclass": true
            },
            "RoleId": {
              "description": "The role ID of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RoleName": {
              "description": "The display name of the role to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UpdaterEntityId": {
              "description": "The identifier for the entity that updated the container to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UpdaterEntityType": {
              "description": "The type of entity that updated the container to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "EntityChain": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GroupName": {
              "description": "The name of the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "NewValues": {
              "$ref": "#/definitions/GroupPropertyValues",
              "description": "The new values of the group's changed properties",
              "x-jsontype": "Object",
              "x-actualtype": "GroupPropertyValues",
              "x-isclass": true
            },
            "OldValues": {
              "$ref": "#/definitions/GroupPropertyValues",
              "description": "The previous values of the group's changed properties",
              "x-jsontype": "Object",
              "x-actualtype": "GroupPropertyValues",
              "x-isclass": true
            },
            "UpdaterEntityId": {
              "description": "The identifier for the entity that updated the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UpdaterEntityType": {
              "description": "The type of entity that updated the group to which this event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "CreatorAuthenticationId": {
              "description": "Authentication provider's id for the user who created the studio",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CreatorPlayFabId": {
              "description": "PlayFab id of the user who created the studio",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StudioName": {
              "description": "Name of the new studio",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggererd when a user accepts a studio invitation.",
          "type": "object",
          "properties": {
            "AuthenticationId": {
              "description": "Authentication provider's ID for this user",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AuthenticationProvider": {
              "$ref": "#/definitions/AuthenticationProvider",
              "description": "Authentication provider for the user",
              "x-jsontype": "String",
              "x-actualtype": "AuthenticationProvider",
              "x-isenum": true
            },
            "AuthenticationProviderId": {
              "description": "Authentication provider entity id, if needed by the provider",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Email": {
              "description": "User's email",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InvitationId": {
              "description": "Id of the invitation record if user needed to register",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayFabId": {
              "description": "PlayFab ID for this user",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StudioPermissions": {
              "description": "Array of studio permissions that were be granted to the user",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitlePermissions": {
              "description": "Dictionary of title id, title permissions that were granted to the user",
              "x-collection": "map",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggererd when a user is invited to a studio.",
          "type": "object",
          "properties": {
            "AuthenticationProvider": {
              "$ref": "#/definitions/AuthenticationProvider",
              "description": "Authentication provider type required for user to register with",
              "x-jsontype": "String",
              "x-actualtype": "AuthenticationProvider",
              "x-isenum": true
            },
            "AuthenticationProviderId": {
              "description": "Authentication provider entity id, if needed by the provider.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Email": {
              "description": "Email the invitation was sent to",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InvitationExpires": {
              "description": "Expiration of the invitation",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "InvitationId": {
              "description": "Id of the invitation if user needed to register",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InvitedExistingUser": {
              "description": "Indicates if the user invited already existed, if so no invitation record was created and the user was automatically attached",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "InvitorPlayFabId": {
              "description": "Identity of the user who created the invitation",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StudioPermissions": {
              "description": "Array of studio permissions which will be granted to the user when registering",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitlePermissions": {
              "description": "Dictionary of title id, title permissions which will be granted to the user when registering",
              "x-collection": "map",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "InvitedExistingUser"
          ]
        },
        {
          "description": "",
          "type": "object",
          "properties": {
            "AuthenticationId": {
              "description": "Authentication provider's ID for this user",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AuthenticationProvider": {
              "$ref": "#/definitions/AuthenticationProvider",
              "description": "Authentication provider for the user",
              "x-jsontype": "String",
              "x-actualtype": "AuthenticationProvider",
              "x-isenum": true
            },
            "AuthenticationProviderId": {
              "description": "Authentication provider entity id, if needed by the provider",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayFabId": {
              "description": "PlayFab ID for this user",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StudioPermissions": {
              "description": "Array of studio permissions that the user had",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitlePermissions": {
              "description": "Dictionary of title id, title permissions that the user had",
              "x-collection": "map",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        }
      ]
    },
    {
      "Group": "character",
      "Classes": [
        {
          "description": "This event is triggered when a character consumes an item from their inventory.",
          "type": "object",
          "properties": {
            "CatalogVersion": {
              "description": "Version of the catalog from which the consumed inventory item was created.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemId": {
              "description": "ID of the catalog item from which the consumed inventory item was created. This can be used to look up the item from the catalog.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemInstanceId": {
              "description": "The specific ID of the item that was consumed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayerId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousUsesRemaining": {
              "description": "For multiple use items, the number of uses that remained before the item was consumed.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UsesRemaining": {
              "description": "For multiple use items, the number of uses remaining after the item was consumed.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "PreviousUsesRemaining",
            "UsesRemaining"
          ]
        },
        {
          "description": "This event is triggered when a character is created for the first time.",
          "type": "object",
          "properties": {
            "CharacterName": {
              "description": "Name of the character.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Created": {
              "description": "When the character was created.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "PlayerId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "Created"
          ]
        },
        {
          "description": "This event is triggered when an item is granted to a character.",
          "type": "object",
          "properties": {
            "Annotation": {
              "description": "Optional details about the inventory item.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "BundleContents": {
              "description": "Catalog item IDs of any other items granted to the character along with this one as part of a bundle.",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CatalogVersion": {
              "description": "Catalog version in which the item that was added is defined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Class": {
              "description": "Class of the item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CouponCode": {
              "description": "Redeemed coupon (if any) that granted the item.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "DisplayName": {
              "description": "Display name of the item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Expiration": {
              "description": "When the item expires. The value is null if the item does not expire.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "InstanceId": {
              "description": "Unique instance ID of the inventory item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemId": {
              "description": "Catalog item ID of the inventory item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayerId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RemainingUses": {
              "description": "How many uses the item has, if it has a limited number of uses.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a character statistic is changed.",
          "type": "object",
          "properties": {
            "PlayerId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StatisticName": {
              "description": "Name of the statistic that changed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StatisticPreviousValue": {
              "description": "Old value of the statistic, before the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "StatisticValue": {
              "description": "New value of the statistic, after the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "TitleId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Version": {
              "description": "Version of the statistic that changed. This is relevant for statistics that reset, since each time the statistic resets the version increments.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "Version",
            "StatisticValue"
          ]
        },
        {
          "description": "This event is triggered when the character makes a purchase using virtual currency.",
          "type": "object",
          "properties": {
            "CatalogVersion": {
              "description": "Version of the catalog from which the item was purchased.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CurrencyCode": {
              "description": "Currency that was used to purchase the item.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemId": {
              "description": "Identifier of the catalog item that was purchased.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayerId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PurchaseId": {
              "description": "Unique identifier of the purchase transaction.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Quantity": {
              "description": "Quantity of items that were purchased.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "StoreId": {
              "description": "The StoreId where the item was purchased.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UnitPrice": {
              "description": "Price paid per item, expressed in the virtual currency.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "Quantity",
            "UnitPrice"
          ]
        },
        {
          "description": "This event is triggered when a character's virtual currency balance changes.",
          "type": "object",
          "properties": {
            "OrderId": {
              "description": "Id of the order that triggered the balance changes",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayerId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "VirtualCurrencyBalance": {
              "description": "New virtual currency balance after the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "VirtualCurrencyName": {
              "description": "Virtual currency whose balance changed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "VirtualCurrencyPreviousBalance": {
              "description": "Old virtual currency balance before the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            }
          },
          "required": [
            "VirtualCurrencyBalance",
            "VirtualCurrencyPreviousBalance"
          ]
        }
      ]
    },
    {
      "Group": "partner",
      "Classes": [
        {
          "description": "This event is triggered when a display name is filtered by community sift.",
          "type": "object",
          "properties": {
            "DisplayName": {
              "description": "Value of the display name that was filtered",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayerId": {
              "description": "If event occurs at account creation, then no player exists yet. Otherwise, the player whose displayname update was filtered",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a display name is filtered by community sift only if there is an associated player EntityId for the event.",
          "type": "object",
          "properties": {
            "DisplayName": {
              "description": "Value of the display name that was filtered",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player connects to a Photon Cloud application and authenticates with PlayFab using Photon custom authentication.",
          "type": "object",
          "properties": {
            "PhotonApplicationId": {
              "description": "Unique identifier of the Photon Cloud application to which the player is connected",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PhotonApplicationType": {
              "$ref": "#/definitions/PhotonServicesEnum",
              "description": "Type of Photon Cloud application to which the player is connected",
              "x-jsontype": "String",
              "x-actualtype": "PhotonServicesEnum",
              "x-isenum": true
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        }
      ]
    },
    {
      "Group": "player",
      "Classes": [
        {
          "description": "This event is triggered when an email confirmation link is clicked.",
          "type": "object",
          "properties": {
            "EmailTemplateId": {
              "description": "The email template id, if the auth token was sent via an email template.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Token": {
              "description": "The email token in the confirmation link that was clicked.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered by an attribution tracking Add-on when a player is matched to a paid acquisition campaign.",
          "type": "object",
          "properties": {
            "CampaignId": {
              "description": "The ID of the campaign, as passed in by the attribution provider.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player closes an ad.",
          "type": "object",
          "properties": {
            "AdPlacementId": {
              "description": "Id of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdPlacementName": {
              "description": "Name of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdUnit": {
              "description": "Ad unit type",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardId": {
              "description": "Id of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardName": {
              "description": "Name of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player creates a new account for a title. Note: this event is triggered once per title rather than once per publisher.",
          "type": "object",
          "properties": {
            "DisplayName": {
              "description": "Player's display name when they added this title.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Platform": {
              "$ref": "#/definitions/LoginIdentityProvider",
              "description": "Authentication method used to register player's account.",
              "x-jsontype": "String",
              "x-actualtype": "LoginIdentityProvider",
              "x-isenum": true
            },
            "PlatformUserId": {
              "description": "Unique ID for the player's account associated with the Origination authentication method.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player finishes an ad.",
          "type": "object",
          "properties": {
            "AdPlacementId": {
              "description": "Id of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdPlacementName": {
              "description": "Name of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdUnit": {
              "description": "Ad unit type",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardId": {
              "description": "Id of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardName": {
              "description": "Name of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player opens an ad.",
          "type": "object",
          "properties": {
            "AdPlacementId": {
              "description": "Id of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdPlacementName": {
              "description": "Name of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdUnit": {
              "description": "Ad unit type",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardId": {
              "description": "Id of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardName": {
              "description": "Name of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player recieves an ad reward.",
          "type": "object",
          "properties": {
            "ActionGroupDebugMessages": {
              "description": "Debug messages from the reward actions",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdPlacementId": {
              "description": "Id of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdPlacementName": {
              "description": "Name of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdUnit": {
              "description": "Ad unit type",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardId": {
              "description": "Id of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardName": {
              "description": "Name of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ViewsRemainingThisPeriod": {
              "description": "Views this player has remaining for the placement's window, if applicable",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            }
          }
        },
        {
          "description": "Event triggered when reported value of ad view is recorded",
          "type": "object",
          "properties": {
            "AdPlacementId": {
              "description": "Id of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdPlacementName": {
              "description": "Name of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdUnit": {
              "description": "Ad unit type",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RevenueShare": {
              "description": "Share of the revenue for this ad view (calculated as total revenue for placement devided by total views for that placement in that time window)",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "RewardId": {
              "description": "Id of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardName": {
              "description": "Name of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "RevenueShare"
          ]
        },
        {
          "description": "This event is triggered when a player starts an ad.",
          "type": "object",
          "properties": {
            "AdPlacementId": {
              "description": "Id of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdPlacementName": {
              "description": "Name of the placement",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AdUnit": {
              "description": "Ad unit type",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardId": {
              "description": "Id of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RewardName": {
              "description": "Name of the reward",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player is banned.",
          "type": "object",
          "properties": {
            "BanExpiration": {
              "description": "When the ban expires. The value is null if the ban is permanent.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "BanId": {
              "description": "ID of the ban. Useful for tracking unique bans, if the player has been banned before.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "BanReason": {
              "description": "The reason why the player was banned.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PermanentBan": {
              "description": "Whether this ban is permanent.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "PermanentBan"
          ]
        },
        {
          "description": "This event is triggered when a player's avatar URL is changed.",
          "type": "object",
          "properties": {
            "ImageUrl": {
              "description": "URL of the avatar image.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousImageUrl": {
              "description": "Previous URL of the avatar image.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player completes the password reset process by visiting the link URL that was sent to them and choosing a new password.",
          "type": "object",
          "properties": {
            "CompletedFromIPAddress": {
              "description": "IP address from which the password reset process was completed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CompletionTimestamp": {
              "description": "When the password reset process was completed.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "InitiatedBy": {
              "$ref": "#/definitions/PasswordResetInitiationSource",
              "description": "Source that initiated the password reset process.",
              "x-jsontype": "String",
              "x-actualtype": "PasswordResetInitiationSource",
              "x-isenum": true
            },
            "InitiatedFromIPAddress": {
              "description": "IP address from which the password reset process was initiated.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InitiationTimestamp": {
              "description": "When the password reset process was initiated.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "LinkExpiration": {
              "description": "Expiration time for the password reset link.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "PasswordResetId": {
              "description": "Unique identifier for the password reset link. This cannot be used to complete the reset.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RecoveryEmailAddress": {
              "description": "Email address to which the password reset link was sent.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "InitiationTimestamp",
            "LinkExpiration",
            "CompletionTimestamp"
          ]
        },
        {
          "description": "This event is triggered when a player consumes an item from their inventory.",
          "type": "object",
          "properties": {
            "CatalogVersion": {
              "description": "Version of the catalog from which the consumed inventory item was created.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemId": {
              "description": "ID of the catalog item from which the consumed inventory item was created. This can be used to look up the item from the catalog.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemInstanceId": {
              "description": "The specific ID of the item that was consumed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousUsesRemaining": {
              "description": "For multiple use items, the number of uses that remained before the item was consumed.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UsesRemaining": {
              "description": "For multiple use items, the number of uses remaining after the item was consumed.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "PreviousUsesRemaining",
            "UsesRemaining"
          ]
        },
        {
          "description": "This event is triggered when a player account is created for the first time. Note: this event is only triggered once per publisher, not once per title.",
          "type": "object",
          "properties": {
            "Created": {
              "description": "When the player account was created.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "PublisherId": {
              "description": "Unique ID for the publisher account under which this player account is created.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "Created"
          ]
        },
        {
          "description": "This event is triggered when a player's data is exported.",
          "type": "object",
          "properties": {
            "ExportDownloadUrl": {
              "description": "URL to download the export.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "JobReceiptId": {
              "description": "Receipt ID of the export job. This should correspond to the receipt ID returned by the export API call.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RequestTime": {
              "description": "The time of export request.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "RequestTime"
          ]
        },
        {
          "description": "This event is triggered when a player's display name is changed.",
          "type": "object",
          "properties": {
            "DisplayName": {
              "description": "New display name after the change.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousDisplayName": {
              "description": "Previous display name before the change.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is optionally triggered when a CloudScript function is executed, either by calling the ExecuteCloudScript API with the GeneratePlayStreamEvent option or triggered by a PlayStream event action with the 'Publish results as a PlayStream Event' box checked.",
          "type": "object",
          "properties": {
            "CloudScriptExecutionResult": {
              "$ref": "#/definitions/ExecuteCloudScriptResult",
              "description": "Result of the CloudScript function, including diagnostic information that is useful for debugging.",
              "x-jsontype": "Object",
              "x-actualtype": "ExecuteCloudScriptResult",
              "x-isclass": true
            },
            "FunctionName": {
              "description": "Name of the CloudScript function that was called.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when an item is granted to a player.",
          "type": "object",
          "properties": {
            "Annotation": {
              "description": "Optional details about the inventory item.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "BundleContents": {
              "description": "Catalog item IDs of any other items granted to the player along with this one as part of a bundle.",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CatalogVersion": {
              "description": "Catalog version in which the item that was added is defined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Class": {
              "description": "Class of the item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CouponCode": {
              "description": "Redeemed coupon (if any) that granted the item.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "DisplayName": {
              "description": "Display name of the item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Expiration": {
              "description": "When the item expires. The value is null if the item does not expire.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "InstanceId": {
              "description": "Unique instance ID of the inventory item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemId": {
              "description": "Catalog item ID of the inventory item that was added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RemainingUses": {
              "description": "How many uses the item has, if it has a limited number of uses.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player joins a multiplayer game session.",
          "type": "object",
          "properties": {
            "GameMode": {
              "description": "Game mode of the game lobby the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LobbyId": {
              "description": "Unique ID of the game lobby the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Region": {
              "description": "Region in which the game server lives that the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerBuildVersion": {
              "description": "Build version of the custom game server running the lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHost": {
              "description": "Publicly visible domain name or IPV4 address of the machine running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHostInstanceId": {
              "description": "Unique identifier of the machine hosting the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerIPV6Address": {
              "description": "Publicly visible IPV6 address of the machine running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerPort": {
              "description": "Network port assigned to the custom game server.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "ServerPort"
          ]
        },
        {
          "description": "This event is triggered when a player leaves a multiplayer game session.",
          "type": "object",
          "properties": {
            "GameMode": {
              "description": "Game mode of the game session the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LobbyId": {
              "description": "Unique ID of the game session the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Region": {
              "description": "Region in which the game server lives that the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerBuildVersion": {
              "description": "Build version of the custom game server running the lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHost": {
              "description": "Publicly visible domain name or IPV4 address of the machine running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHostInstanceId": {
              "description": "Unique identifier of the machine hosting the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerIPV6Address": {
              "description": "Publicly visible IPV6 address of the machine running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerPort": {
              "description": "Network port assigned to the custom game server.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "ServerPort"
          ]
        },
        {
          "description": "This event is triggered when a new authentication method is linked to a player's account.",
          "type": "object",
          "properties": {
            "Email": {
              "description": "Player's email linked with the given provider",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Origination": {
              "$ref": "#/definitions/LoginIdentityProvider",
              "description": "Authentication method being linked to a player's account.",
              "x-jsontype": "String",
              "x-actualtype": "LoginIdentityProvider",
              "x-isenum": true
            },
            "OriginationUserId": {
              "description": "Player's identity under authentication method being linked to player's account.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Username": {
              "description": "Player's username linked with the given provider",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player logs in.",
          "type": "object",
          "properties": {
            "Location": {
              "$ref": "#/definitions/EventLocation",
              "description": "Player's geographic location, if known. Location is estimated from factors such as IP address and is not always available or accurate.",
              "x-jsontype": "Object",
              "x-actualtype": "EventLocation",
              "x-isclass": true
            },
            "Platform": {
              "$ref": "#/definitions/LoginIdentityProvider",
              "description": "Authentication method used to login the player.",
              "x-jsontype": "String",
              "x-actualtype": "LoginIdentityProvider",
              "x-isenum": true
            },
            "PlatformUserId": {
              "description": "Player's identity under the authentication method used to login the player.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player is assigned to a game lobby and issued a connection ticket, before the player has connected to the game lobby.",
          "type": "object",
          "properties": {
            "GameMode": {
              "description": "Game mode of the game lobby the player was assigned to.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LobbyId": {
              "description": "Unique ID of the game lobby the player was assigned to.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Region": {
              "description": "Region in which the game server lives that the player was assigned to.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerBuildVersion": {
              "description": "Build version of the custom game server running the lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHost": {
              "description": "Publicly visible domain name or IPV4 address of the machine running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHostInstanceId": {
              "description": "Unique identifier of the machine hosting the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerIPV6Address": {
              "description": "Publicly visible IPV6 address of the machine running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerPort": {
              "description": "Network port assigned to the custom game server.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "ServerPort"
          ]
        },
        {
          "description": "This event is triggered when a player is sent a link to reset their password.",
          "type": "object",
          "properties": {
            "InitiatedBy": {
              "$ref": "#/definitions/PasswordResetInitiationSource",
              "description": "Source that initiated the password reset process.",
              "x-jsontype": "String",
              "x-actualtype": "PasswordResetInitiationSource",
              "x-isenum": true
            },
            "InitiatedFromIPAddress": {
              "description": "IP address from which the password reset process was initiated.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LinkExpiration": {
              "description": "Expiration time for the password reset link.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "PasswordResetId": {
              "description": "Unique identifier for the password reset link. This cannot be used to complete the reset.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "RecoveryEmailAddress": {
              "description": "Email address to which the password reset link was sent.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "LinkExpiration"
          ]
        },
        {
          "description": "This event is triggered when the second step of the payment process completes, paying for the purchase.",
          "type": "object",
          "properties": {
            "OrderId": {
              "description": "Purchase order identifier.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ProviderData": {
              "description": "Provider used for the transaction.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ProviderName": {
              "description": "Payment provider to use to fund the purchase.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ProviderToken": {
              "description": "A token generated by the provider to authenticate the request (provider-specific).",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PurchaseConfirmationPageURL": {
              "description": "URL to the purchase provider page that details the purchase.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PurchaseCurrency": {
              "description": "Currency for the transaction, may be a virtual currency or real money.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PurchasePrice": {
              "description": "Cost of the transaction.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "Status": {
              "$ref": "#/definitions/TransactionStatus",
              "description": "Status of the transaction.",
              "x-jsontype": "String",
              "x-actualtype": "TransactionStatus",
              "x-isenum": true
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "VirtualCurrencyBalances": {
              "description": "Current virtual currency balances for the user.",
              "x-collection": "map",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "VirtualCurrencyGrants": {
              "description": "Virtual currencies granted by the transaction, if any.",
              "x-collection": "map",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            }
          },
          "required": [
            "PurchasePrice"
          ]
        },
        {
          "description": "This event is triggered for the top-ranked players on a leaderboard when the leaderboard version changes (e.g. when a leaderboard statistic version is incremented). The maximum number of leaderboard entries for which the event is generated is controlled by the \"Leaderboard version change top rank events sent\" title limit.",
          "type": "object",
          "properties": {
            "LeaderboardSource": {
              "$ref": "#/definitions/LeaderboardSource",
              "description": "Source of the values for the leaderboard.",
              "x-jsontype": "Object",
              "x-actualtype": "LeaderboardSource",
              "x-isclass": true
            },
            "Rank": {
              "description": "Player's rank on the leaderboard.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Value": {
              "description": "Player's leaderboard value.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "Version": {
              "description": "Version of the leaderboard on which the player is ranked. For player statistic leaderboards, this matches the version of the statistic.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "VersionChangeBehavior": {
              "$ref": "#/definitions/LeaderboardVersionChangeBehavior",
              "description": "Behavior with respect to the leaderboard values when the version changed.",
              "x-jsontype": "String",
              "x-actualtype": "LeaderboardVersionChangeBehavior",
              "x-isenum": true
            }
          },
          "required": [
            "Rank",
            "Value",
            "Version"
          ]
        },
        {
          "description": "This event is triggered when a player makes a real money purchase, and generates revenue for the game.",
          "type": "object",
          "properties": {
            "OrderId": {
              "description": "Unique identifier of the order.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "OrderTotal": {
              "description": "Total value of the purchase in the system currency (defaults to USD).",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "PaymentProvider": {
              "description": "Payment provider used to make the purchase.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PaymentType": {
              "$ref": "#/definitions/PaymentType",
              "description": "Type of payment used to make the purchase.",
              "x-jsontype": "String",
              "x-actualtype": "PaymentType",
              "x-isenum": true
            },
            "PurchasedProduct": {
              "description": "The ItemIds from the catalog of the purchased items, if applicable.",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TransactionCurrency": {
              "$ref": "#/definitions/Currency",
              "description": "Local currency used to make the purchase, if applicable.",
              "x-jsontype": "String",
              "x-actualtype": "Currency",
              "x-isenum": true
            },
            "TransactionId": {
              "description": "Unique identifier of the transaction.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TransactionTotal": {
              "description": "Total value of the purchase in the local currency used to make the purchase, if applicable.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "OrderTotal"
          ]
        },
        {
          "description": "This event is triggered when a player attempts to make a real money purchase and the purchase receipt is being validated.",
          "type": "object",
          "properties": {
            "Error": {
              "description": "The error that occured during a receipt validation.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PaymentProvider": {
              "description": "Payment provider used to make the purchase attempt.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PaymentType": {
              "$ref": "#/definitions/PaymentType",
              "description": "Type of payment used to make the purchase attempt.",
              "x-jsontype": "String",
              "x-actualtype": "PaymentType",
              "x-isenum": true
            },
            "ReceiptContent": {
              "description": "The receipt data during a real money purchase event attempt.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Valid": {
              "description": "Indicates if the receipt is valid.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            }
          },
          "required": [
            "Valid"
          ]
        },
        {
          "description": "This event is triggered when a player redeems a coupon.",
          "type": "object",
          "properties": {
            "CouponCode": {
              "description": "Coupon code the player redeemed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GrantedInventoryItems": {
              "$ref": "#/definitions/CouponGrantedInventoryItem",
              "description": "Items added to the player's inventory by redeeming the coupon.",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "CouponGrantedInventoryItem",
              "x-isclass": true
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player registers for push notifications.",
          "type": "object",
          "properties": {
            "DeviceToken": {
              "description": "Unique device token registered for push notifications.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Platform": {
              "$ref": "#/definitions/PushNotificationPlatform",
              "description": "Platform on which the player is registering for push notifications.",
              "x-jsontype": "String",
              "x-actualtype": "PushNotificationPlatform",
              "x-isenum": true
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player account for a title is removed. Note: this event is triggered once per title rather than once per publisher.",
          "type": "object",
          "properties": {
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player is reported by another player as abusive.",
          "type": "object",
          "properties": {
            "Comment": {
              "description": "Comment submitted by the player who made the report.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ReportedByPlayer": {
              "description": "Player ID of the player who made the report.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when PlayFab makes an internal adjustment to a player profile.",
          "type": "object",
          "properties": {
            "Property": {
              "$ref": "#/definitions/PlayerProfileProperty",
              "description": "Property of the profile to be set",
              "x-jsontype": "String",
              "x-actualtype": "PlayerProfileProperty",
              "x-isenum": true
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Value": {
              "description": "Value to set to",
              "x-jsontype": "Object",
              "x-actualtype": "object"
            }
          }
        },
        {
          "description": "This event is triggered when a player starts a purchase.",
          "type": "object",
          "properties": {
            "CatalogVersion": {
              "description": "Catalog version for the items to be purchased. Defaults to most recent catalog.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Contents": {
              "$ref": "#/definitions/CartItem",
              "description": "Cart items to be purchased.",
              "x-collection": "array",
              "x-jsontype": "Object",
              "x-actualtype": "CartItem",
              "x-isclass": true
            },
            "OrderId": {
              "description": "Purchase order identifier.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StoreId": {
              "description": "Store through which to purchase items. If not set, prices will be pulled from the catalog itself.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player statistic is changed.",
          "type": "object",
          "properties": {
            "AggregationMethod": {
              "$ref": "#/definitions/StatisticAggregationMethod",
              "description": "Aggregation method applied for calculating the new value of the statistic.",
              "x-jsontype": "String",
              "x-actualtype": "StatisticAggregationMethod",
              "x-isenum": true
            },
            "StatisticId": {
              "description": "Unique ID of the statistic that changed.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "StatisticName": {
              "description": "Name of the statistic that changed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StatisticPreviousValue": {
              "description": "Old value of the statistic, before the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "StatisticValue": {
              "description": "New value of the statistic, after the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Version": {
              "description": "Version of the statistic that changed. This is relevant for statistics that reset, since each time the statistic resets the version increments.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "StatisticId",
            "Version",
            "StatisticValue"
          ]
        },
        {
          "description": "This event is triggered when a player statistic is deleted.",
          "type": "object",
          "properties": {
            "StatisticId": {
              "description": "Unique ID of the statistic that was deleted.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "StatisticName": {
              "description": "Name of the statistic that was deleted.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StatisticPreviousValue": {
              "description": "Old value of the statistic, before being deleted.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Version": {
              "description": "Version of the statistic. This is relevant for statistics that reset, since each time the statistic resets the version increments.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "StatisticId",
            "Version"
          ]
        },
        {
          "description": "This event is triggered when a tag is added to a player profile.",
          "type": "object",
          "properties": {
            "Namespace": {
              "description": "Namespace for this tag",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TagName": {
              "description": "Name of the tag that is added.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a tag is removed from a player profile.",
          "type": "object",
          "properties": {
            "Namespace": {
              "description": "Namespace for this tag",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TagName": {
              "description": "Name of the tag that is removed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a CloudScript function is run as the result of a PlayStream action, and the 'Publish results as a PlayStream Event' box was checked.",
          "type": "object",
          "properties": {
            "CloudScriptExecutionResult": {
              "$ref": "#/definitions/ExecuteCloudScriptResult",
              "description": "Result of the CloudScript function, including an error information. Useful for debugging.",
              "x-jsontype": "Object",
              "x-actualtype": "ExecuteCloudScriptResult",
              "x-isclass": true
            },
            "FunctionName": {
              "description": "Name of the CloudScript function that was called.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TriggeringEventData": {
              "description": "The full JSON data of the event that triggered this CloudScript function to run. Useful for debugging.",
              "x-jsontype": "Object",
              "x-actualtype": "object"
            },
            "TriggeringEventName": {
              "description": "Name of the event that triggered this CloudScript function to run.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TriggeringPlayer": {
              "$ref": "#/definitions/PlayerProfile",
              "description": "JSON data profile of the player that triggered this CloudScript function to run.",
              "x-jsontype": "Object",
              "x-actualtype": "PlayerProfile",
              "x-isclass": true
            }
          }
        },
        {
          "description": "This event is triggered when an authentication method is unlinked from a player's account.",
          "type": "object",
          "properties": {
            "Origination": {
              "$ref": "#/definitions/LoginIdentityProvider",
              "description": "Authentication method being unlinked from a player's account.",
              "x-jsontype": "String",
              "x-actualtype": "LoginIdentityProvider",
              "x-isenum": true
            },
            "OriginationUserId": {
              "description": "Player's identity under authentication method being unlinked from player's account.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player updates a contact email on their profile.",
          "type": "object",
          "properties": {
            "EmailName": {
              "description": "The name of the contact email that was updated or added in the player's profile.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "NewEmailAddress": {
              "description": "The contact email updated or added in the player's profile.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousEmailAddress": {
              "description": "The previous contact email updated in the player's profile.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when the player makes a purchase using virtual currency.",
          "type": "object",
          "properties": {
            "CatalogVersion": {
              "description": "Version of the catalog from which the item was purchased.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CurrencyCode": {
              "description": "Currency that was used to purchase the item.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ItemId": {
              "description": "Identifier of the catalog item that was purchased.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PurchaseId": {
              "description": "Unique identifier of the purchase transaction.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Quantity": {
              "description": "Quantity of items that were purchased.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "StoreId": {
              "description": "The StoreId where the item was purchased.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UnitPrice": {
              "description": "Price paid per item, expressed in the virtual currency.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "Quantity",
            "UnitPrice"
          ]
        },
        {
          "description": "This event is triggered when a contact email is verified for a player.",
          "type": "object",
          "properties": {
            "EmailAddress": {
              "description": "The email address of the player's contact email that was verified.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EmailName": {
              "description": "The name of the player's contact email that was verified.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a player's virtual currency balance changes.",
          "type": "object",
          "properties": {
            "OrderId": {
              "description": "Id of the order that triggered the balance changes",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "VirtualCurrencyBalance": {
              "description": "New virtual currency balance after the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "VirtualCurrencyName": {
              "description": "Virtual currency whose balance changed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "VirtualCurrencyPreviousBalance": {
              "description": "Old virtual currency balance before the change.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            }
          },
          "required": [
            "VirtualCurrencyBalance",
            "VirtualCurrencyPreviousBalance"
          ]
        },
        {
          "description": "This event is triggered when an email is sent or fails to send to a player.",
          "type": "object",
          "properties": {
            "Body": {
              "description": "The content of the email body, truncated to 4096 characters.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EmailName": {
              "description": "The name of the player's contact email the email was sent to.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EmailTemplateId": {
              "description": "The email template id during a send email attempt.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EmailTemplateName": {
              "description": "The email template name during a send email attempt.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "EmailTemplateType": {
              "$ref": "#/definitions/EmailTemplateType",
              "description": "The email template type during a send email attempt.",
              "x-jsontype": "String",
              "x-actualtype": "EmailTemplateType",
              "x-isenum": true
            },
            "ErrorMessage": {
              "description": "The error that occurred if an email failed to send.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ErrorName": {
              "description": "The name of the error that occurred if an email failed to send.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Subject": {
              "description": "The content of the email subject, truncated to 1024 characters.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Success": {
              "description": "Indicates if the email was successfully sent.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "TitleId": {
              "description": "The ID of the title to which this player event applies.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Token": {
              "description": "The auth token included in the sent email as part of a confirmation URL.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "Success"
          ]
        }
      ]
    },
    {
      "Group": "session",
      "Classes": [
        {
          "description": "This event is triggered when a multiplayer game lobby ends.",
          "type": "object",
          "properties": {
            "GameMode": {
              "description": "Game mode of the game lobby the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Region": {
              "description": "Region in which the game server lives that the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerBuildVersion": {
              "description": "Build version of the custom game server running the lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHost": {
              "description": "Publicly visible domain name or IPV4 address of the host running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHostInstanceId": {
              "description": "Unique identifier of the machine hosting the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerIPV6Address": {
              "description": "Publicly visible IPV6 address of the host running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerPort": {
              "description": "Network port of the host assigned to the custom game server.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "Tags": {
              "description": "Custom tags associated with the game lobby.",
              "x-collection": "map",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title associated with this game lobby",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "ServerPort"
          ]
        },
        {
          "description": "This event is triggered when a multiplayer game lobby starts.",
          "type": "object",
          "properties": {
            "CustomCommandLineData": {
              "description": "Custom command line arguments passed to the server process running the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "CustomMatchmakerEndpoint": {
              "description": "Webhook endpoint of the custom matchmaker (if any) that started the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GameMode": {
              "description": "Game mode of the game lobby the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GameServerData": {
              "description": "Configuration data passed to the server process running the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "MaxPlayers": {
              "description": "Maximum number of players that may be connected to the game lobby.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "Region": {
              "description": "Region in which the game server lives that the player joined.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerBuildVersion": {
              "description": "Build version of the custom game server running the lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHost": {
              "description": "Publicly visible domain name or IPV4 address of the host running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHostInstanceId": {
              "description": "Unique identifier of the machine hosting the game lobby.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerIPV6Address": {
              "description": "Publicly visible IPV6 address of the host running the custom game server.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerPort": {
              "description": "Network port of the host assigned to the custom game server.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            },
            "Tags": {
              "description": "Custom tags associated with the game lobby.",
              "x-collection": "map",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title associated with this game lobby",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "ServerPort"
          ]
        },
        {
          "description": "This event is triggered when a multiplayer game lobby starts.",
          "type": "object",
          "properties": {
            "InstanceId": {
              "description": "Unique identifier of the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InstanceProvider": {
              "description": "Server hosting provider of host machine or VM.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InstanceType": {
              "description": "Provider specific type of the host machine or VM.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Region": {
              "description": "Region in which the host is running.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerBuildVersion": {
              "description": "Build version of the custom game server installed on the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHost": {
              "description": "Publicly visible domain name or IPV4 address of the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerIPV6Address": {
              "description": "Publicly visible IPV6 address of the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StartTime": {
              "description": "Time that the host was started.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "TitleId": {
              "description": "The ID of the title associated with this host",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "StartTime"
          ]
        },
        {
          "description": "This event is triggered when a multiplayer game lobby stops.",
          "type": "object",
          "properties": {
            "InstanceId": {
              "description": "Unique identifier of the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InstanceProvider": {
              "description": "Server hosting provider of host machine or VM.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "InstanceType": {
              "description": "Provider specific type of the host machine or VM.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Region": {
              "description": "Region in which the host is running.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerBuildVersion": {
              "description": "Build version of the custom game server installed on the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerHost": {
              "description": "Publicly visible domain name or IPV4 address of the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ServerIPV6Address": {
              "description": "Publicly visible IPV6 address of the host.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StartTime": {
              "description": "Time that the host was started.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "StopReason": {
              "$ref": "#/definitions/GameServerHostStopReason",
              "description": "Reason that the host was stopped.",
              "x-jsontype": "String",
              "x-actualtype": "GameServerHostStopReason",
              "x-isenum": true
            },
            "StopTime": {
              "description": "Time that the host was stopped.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "TitleId": {
              "description": "The ID of the title associated with this host",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "StartTime",
            "StopTime"
          ]
        },
        {
          "description": "This event is triggered when a session ends",
          "type": "object",
          "properties": {
            "Crashed": {
              "description": "Whether or not the session was marked as a crash",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "EndTime": {
              "description": "The time the session was explicitly ended at, clamped to 24 hours. This can differ significantly from the event timestamp if the game crashed",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "KilobytesWritten": {
              "description": "The total kilobytes written to the S3 file associated with this session",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "SessionLengthMs": {
              "description": "The length of the session in milliseconds",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "TitleId": {
              "description": "The ID of the title associated with this session",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "description": "The ID of the user associated with this session",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "EndTime",
            "SessionLengthMs",
            "Crashed"
          ]
        },
        {
          "description": "This event is triggered when a session starts.",
          "type": "object",
          "properties": {
            "TemporaryWriteUrl": {
              "description": "The pre-signed S3 URL associated with the session, which has PUT permissions.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TitleId": {
              "description": "The ID of the title associated with this session",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        }
      ]
    },
    {
      "Group": "title",
      "Classes": [
        {
          "description": "This event is triggered when a task instance is aborted.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TaskInstanceId": {
              "description": "ID of the aborted task instance",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when new CloudScript is uploaded to PlayFab.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Published": {
              "description": "Whether the CloudScript that was uploaded is live.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "Revision": {
              "description": "Revision number of the CloudScript file that was added.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "ScriptNames": {
              "description": "Names of the individual script files modified. Currently this is just 'CloudScript.js' but later we will support multiple files.",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Version": {
              "description": "Version number of the CloudScript file that was added.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            }
          },
          "required": [
            "Version",
            "Revision",
            "Published"
          ]
        },
        {
          "description": "This event is triggered when a new game build is uploaded for a game title.",
          "type": "object",
          "properties": {
            "BuildId": {
              "description": "Unique identifier of the build that was uploaded.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "MaxGamesPerHost": {
              "description": "The maximum number of game sessions that can be run on a single server.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "MinFreeGameSlots": {
              "description": "The minimum number of free slots to maintain across all servers for this build.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "Regions": {
              "$ref": "#/definitions/Region",
              "description": "This build is being deployed in these regions and will shortly be available for players to join.",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "Region",
              "x-isenum": true
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "MinFreeGameSlots",
            "MaxGamesPerHost"
          ]
        },
        {
          "description": "This event is triggered when an API Features setting is changed for the title.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousSettingsValues": {
              "$ref": "#/definitions/APISettings",
              "description": "Settings values before the change.",
              "x-jsontype": "Object",
              "x-actualtype": "APISettings",
              "x-isclass": true
            },
            "SettingsValues": {
              "$ref": "#/definitions/APISettings",
              "description": "Settings values after the change.",
              "x-jsontype": "Object",
              "x-actualtype": "APISettings",
              "x-isclass": true
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a catalog is changed.",
          "type": "object",
          "properties": {
            "CatalogVersion": {
              "description": "Version of the catalog that was updated.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Deleted": {
              "description": "Was the catalog deleted.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "Deleted"
          ]
        },
        {
          "description": "This event is triggered when a single IP address generates too many API calls to PlayFab and is throttled.",
          "type": "object",
          "properties": {
            "AlertEventId": {
              "description": "Unique identifier of the alert that triggered this event.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AlertState": {
              "$ref": "#/definitions/AlertStates",
              "description": "State of the alert. Values include Triggered, Recovered, ReTriggered.",
              "x-jsontype": "String",
              "x-actualtype": "AlertStates",
              "x-isenum": true
            },
            "API": {
              "description": "The PlayFab API that was called too frequently.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ErrorCode": {
              "description": "Error message that was returned to the client.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GraphUrl": {
              "description": "URL of an image graph of the counter that triggered the alert.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Level": {
              "$ref": "#/definitions/AlertLevel",
              "description": "Level of the alert. Values include Warn, Alert, Critical.",
              "x-jsontype": "String",
              "x-actualtype": "AlertLevel",
              "x-isenum": true
            }
          }
        },
        {
          "description": "This event is triggered when a scheduled task has completed",
          "type": "object",
          "properties": {
            "AbortedAt": {
              "description": "Timestamp on when the task was aborted. Null if task never was aborted.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "IsAborted": {
              "description": "Whether the task was aborted.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "Result": {
              "$ref": "#/definitions/TaskInstanceStatus",
              "description": "Result of the task run, whether it has succeeded, failed or aborted.",
              "x-jsontype": "String",
              "x-actualtype": "TaskInstanceStatus",
              "x-isenum": true
            },
            "Summary": {
              "description": "Summary of the task run. Different task types have different summary structure.",
              "x-jsontype": "Object",
              "x-actualtype": "object"
            },
            "TaskInstanceId": {
              "description": "ID of the running instance of the task",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TaskType": {
              "description": "Type of the scheduled task",
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "IsAborted"
          ]
        },
        {
          "description": "This event is triggered when a task is created.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ScheduledTask": {
              "$ref": "#/definitions/NameIdentifier",
              "description": "Identity of the scheduled task",
              "x-jsontype": "Object",
              "x-actualtype": "NameIdentifier",
              "x-isclass": true
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a game title is deleted.",
          "type": "object",
          "properties": {}
        },
        {
          "description": "This event is triggered when a task is deleted.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ScheduledTask": {
              "$ref": "#/definitions/NameIdentifier",
              "description": "Identity of the scheduled task",
              "x-jsontype": "Object",
              "x-actualtype": "NameIdentifier",
              "x-isclass": true
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggererd when a title exceeds a service limit and receives an error.",
          "type": "object",
          "properties": {
            "Details": {
              "description": "Additional details about the exceeded limit",
              "x-collection": "map",
              "x-jsontype": "Object",
              "x-actualtype": "object"
            },
            "LimitDisplayName": {
              "description": "The display name of the limit that was exceeded.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LimitId": {
              "description": "The unique identifier of the limit that was exceeded.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LimitValue": {
              "description": "The limit value that was exceeded.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "Unit": {
              "$ref": "#/definitions/MetricUnit",
              "description": "The unit of the limit that was exceeded.",
              "x-jsontype": "String",
              "x-actualtype": "MetricUnit",
              "x-isenum": true
            },
            "Value": {
              "description": "The value that exceeded the limit.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            }
          },
          "required": [
            "LimitValue",
            "Value"
          ]
        },
        {
          "description": "This event is triggered when a game title experiences a high rate of errors.",
          "type": "object",
          "properties": {
            "AlertEventId": {
              "description": "Unique identifier of the alert that triggered this event.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "AlertState": {
              "$ref": "#/definitions/AlertStates",
              "description": "State of the alert. Values include Triggered, Recovered, ReTriggered.",
              "x-jsontype": "String",
              "x-actualtype": "AlertStates",
              "x-isenum": true
            },
            "API": {
              "description": "The PlayFab API that is generating the high rate of errors.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ErrorCode": {
              "description": "Error message that was returned to the client.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "GraphUrl": {
              "description": "URL of an image graph of the counter that triggered the alert.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Level": {
              "$ref": "#/definitions/AlertLevel",
              "description": "Level of the alert. Values include Warn, Alert, Critical.",
              "x-jsontype": "String",
              "x-actualtype": "AlertLevel",
              "x-isenum": true
            }
          }
        },
        {
          "description": "This event is triggered when a title initiates the account recovery process for a player.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PasswordResetId": {
              "description": "Unique identifier for the password reset link. This cannot be used to complete the reset.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayerId": {
              "description": "Player's account ID.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PlayerRecoveryEmailAddress": {
              "description": "Email address to which the account recovery email was sent.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a title changes a service limit.",
          "type": "object",
          "properties": {
            "LimitDisplayName": {
              "description": "The display name of the limit that changed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LimitId": {
              "description": "The unique identifier of the limit that changed.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousPriceUSD": {
              "description": "The price of the limit level in US Dollars before the change, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "PreviousValue": {
              "description": "The limit value before the change, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "PriceUSD": {
              "description": "The price of the limit level in US Dollars, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "TransactionId": {
              "description": "The unique identifier of the limit change transaction.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Unit": {
              "$ref": "#/definitions/MetricUnit",
              "description": "The unit of the limit that changed.",
              "x-jsontype": "String",
              "x-actualtype": "MetricUnit",
              "x-isenum": true
            },
            "Value": {
              "description": "The limit value after the change, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            }
          }
        },
        {
          "description": "This event is triggered when any of the game build settings are modified.",
          "type": "object",
          "properties": {
            "BuildId": {
              "description": "Unique identifier of the build that was modified.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "MaxGamesPerHost": {
              "description": "The maximum number of game sessions that can be run on a single server.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "MinFreeGameSlots": {
              "description": "The minimum number of free slots to maintain across all servers for this build.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "Regions": {
              "$ref": "#/definitions/Region",
              "description": "List of regions where the build has been deployed.",
              "x-collection": "array",
              "x-jsontype": "String",
              "x-actualtype": "Region",
              "x-isenum": true
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "MinFreeGameSlots",
            "MaxGamesPerHost"
          ]
        },
        {
          "description": "This event is triggered when a title news is created or updated.",
          "type": "object",
          "properties": {
            "DateCreated": {
              "description": "When the title news was initially created.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "NewsId": {
              "description": "Id of the news that is new or updated.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "NewsTitle": {
              "description": "The current title of the news that is new or updated.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Status": {
              "$ref": "#/definitions/NewsStatus",
              "description": "The current status of the news that is new or updated.",
              "x-jsontype": "String",
              "x-actualtype": "NewsStatus",
              "x-isenum": true
            }
          },
          "required": [
            "DateCreated"
          ]
        },
        {
          "description": "This event is triggered when an update occurs to a a title's permission policies.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "NewPolicy": {
              "description": "The contents new policy.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PolicyName": {
              "description": "The name of the policy that was changed",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a profile view constraint is changed for the title.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousProfileViewConstraints": {
              "description": "Profile view constraints before the change as a JSON string.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ProfileType": {
              "description": "The profile type of the profile view constraints.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ProfileViewConstraints": {
              "description": "Profile view constraints after the change as a JSON string.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "An inactive revision of CloudScript has been made into the active 'live' version.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Revision": {
              "description": "Revision number of the CloudScript that was activated.",
              "x-jsontype": "Number",
              "x-actualtype": "int32"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "Revision"
          ]
        },
        {
          "description": "This event is triggered when a title requests a service limit change.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LevelName": {
              "description": "The name of the requested limit level.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LimitDisplayName": {
              "description": "The display name of the limit requested to change.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "LimitId": {
              "description": "The unique identifier of the limit requested to change.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousLevelName": {
              "description": "The name of the limit level at the time of the requested change, if any.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "PreviousPriceUSD": {
              "description": "The price of the limit level in US Dollars at the time of the requested change, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "PreviousValue": {
              "description": "The limit value at the time of the requested change, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "PriceUSD": {
              "description": "The price of the requested limit level in US Dollars, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            },
            "TransactionId": {
              "description": "The unique identifier of the requested limit change transaction.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Unit": {
              "$ref": "#/definitions/MetricUnit",
              "description": "The unit of the limit requested to change.",
              "x-jsontype": "String",
              "x-actualtype": "MetricUnit",
              "x-isenum": true
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Value": {
              "description": "The limit value of the requested change, if any.",
              "x-jsontype": "Number",
              "x-actualtype": "double"
            }
          }
        },
        {
          "description": "This event is triggered when a CloudScript function is run by a scheduled task.",
          "type": "object",
          "properties": {
            "CloudScriptExecutionResult": {
              "$ref": "#/definitions/ExecuteCloudScriptResult",
              "description": "Result of the CloudScript function, including an error information. Useful for debugging.",
              "x-jsontype": "Object",
              "x-actualtype": "ExecuteCloudScriptResult",
              "x-isclass": true
            },
            "FunctionName": {
              "description": "Name of the CloudScript function that was called.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ScheduledTask": {
              "$ref": "#/definitions/NameId",
              "description": "Scheduled task that called the CloudScript",
              "x-jsontype": "Object",
              "x-actualtype": "NameId",
              "x-isclass": true
            }
          }
        },
        {
          "description": "This event is triggered when a title adds or updates a Secret Key",
          "type": "object",
          "properties": {
            "Deleted": {
              "description": "Flag indicating if the key was deleted by this operation. Either true or null.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Disabled": {
              "description": "Flag indicating if the key is disabled",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "ExpiryDate": {
              "description": "Optional UTC date time that the secret key will expire at.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "SecretKeyId": {
              "description": "Id of the secret key affected.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "SecretKeyName": {
              "description": "Name of the secret key affected.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when a task is scheduled to run.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Parameter": {
              "description": "Parameter of the scheduled task",
              "x-jsontype": "Object",
              "x-actualtype": "object"
            },
            "ScheduledByUserId": {
              "description": "ID of user who manually scheduled the task, null if scheduled automatically",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "ScheduledTask": {
              "$ref": "#/definitions/NameIdentifier",
              "description": "Identity of the scheduled task",
              "x-jsontype": "Object",
              "x-actualtype": "NameIdentifier",
              "x-isclass": true
            },
            "TaskInstanceId": {
              "description": "ID of the running instance of the task",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "TaskType": {
              "description": "Type of the scheduled task",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          }
        },
        {
          "description": "This event is triggered when the version of a statistic changes, causing its leaderboard to reset.",
          "type": "object",
          "properties": {
            "ScheduledResetInterval": {
              "$ref": "#/definitions/StatisticResetIntervalOption",
              "description": "The interval on which the statistic leaderboard was configured to reset, if any.",
              "x-jsontype": "String",
              "x-actualtype": "StatisticResetIntervalOption",
              "x-isenum": true
            },
            "ScheduledResetTime": {
              "description": "The time at which the statistic leaderboard was configured to reset, if any.",
              "x-jsontype": "String",
              "x-actualtype": "DateTime"
            },
            "StatisticName": {
              "description": "Unique name of the statistic.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StatisticVersion": {
              "description": "Version of the statistic, following the update.",
              "x-jsontype": "Number",
              "x-actualtype": "uint32"
            }
          },
          "required": [
            "StatisticVersion"
          ]
        },
        {
          "description": "This event is triggered when a store is changed.",
          "type": "object",
          "properties": {
            "CatalogVersion": {
              "description": "Catalog version that the updated store belongs to.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "Deleted": {
              "description": "Was the store deleted.",
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "StoreId": {
              "description": "ID of the updated store.",
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "Deleted"
          ]
        },
        {
          "description": "This event is triggered when a task is updated.",
          "type": "object",
          "properties": {
            "DeveloperId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            },
            "HasRenamed": {
              "x-jsontype": "Boolean",
              "x-actualtype": "Boolean"
            },
            "ScheduledTask": {
              "$ref": "#/definitions/NameIdentifier",
              "description": "Identity of the scheduled task",
              "x-jsontype": "Object",
              "x-actualtype": "NameIdentifier",
              "x-isclass": true
            },
            "UserId": {
              "x-jsontype": "String",
              "x-actualtype": "String"
            }
          },
          "required": [
            "HasRenamed"
          ]
        }
      ]
    }
  ],
  "ChildTypes": [
    {
      "description": "",
      "type": "object",
      "enum": [
        "Created",
        "Updated",
        "Deleted",
        "None"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "ByteCount": {
          "description": "The storage size according to the underlying provider.",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        },
        "Checksum": {
          "description": "The checksum according to the underlying provider.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "FileName": {
          "description": "File that was updated.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Operation": {
          "$ref": "#/definitions/OperationTypes",
          "description": "The operation that was performed.",
          "x-jsontype": "String",
          "x-actualtype": "OperationTypes",
          "x-isenum": true
        },
        "PreviousByteCount": {
          "description": "The storage size of the old file, if there was one.",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        },
        "PreviousChecksum": {
          "description": "The storage size of the old file, if there was one.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "PreviousStoragePath": {
          "description": "The old file's unique storage path that was deleted by this operation, if there was one.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "StoragePath": {
          "description": "The unique storage path for this set operation.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      },
      "required": [
        "ByteCount"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "Data": {
          "description": "Optional object accompanying the message as contextual information",
          "x-jsontype": "Object",
          "x-actualtype": "object"
        },
        "Level": {
          "description": "'Debug', 'Info', or 'Error'",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Message": {
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "Error": {
          "description": "Error code, such as CloudScriptNotFound, JavascriptException, CloudScriptFunctionArgumentSizeExceeded, CloudScriptAPIRequestCountExceeded, CloudScriptAPIRequestError, or CloudScriptHTTPRequestError",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Message": {
          "description": "Details about the error",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "StackTrace": {
          "description": "Point during the execution of the script at which the error occurred, if any",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "APIRequestsIssued": {
          "description": "Number of PlayFab API requests issued by the CloudScript function",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        },
        "Error": {
          "$ref": "#/definitions/ScriptExecutionError",
          "description": "Information about the error, if any, that occurred during execution",
          "x-jsontype": "Object",
          "x-actualtype": "ScriptExecutionError",
          "x-isclass": true
        },
        "ExecutionTimeSeconds": {
          "x-jsontype": "Number",
          "x-actualtype": "double"
        },
        "FunctionName": {
          "description": "The name of the function that executed",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "FunctionResult": {
          "description": "The object returned from the CloudScript function, if any",
          "x-jsontype": "Object",
          "x-actualtype": "object"
        },
        "FunctionResultTooLarge": {
          "description": "Flag indicating if the FunctionResult was too large and was subsequently dropped from this event. This only occurs if the total event size is larger than 350KB.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "HttpRequestsIssued": {
          "description": "Number of external HTTP requests issued by the CloudScript function",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        },
        "Logs": {
          "$ref": "#/definitions/LogStatement",
          "description": "Entries logged during the function execution. These include both entries logged in the function code using log.info() and log.error() and error entries for API and HTTP request failures.",
          "x-collection": "array",
          "x-jsontype": "Object",
          "x-actualtype": "LogStatement",
          "x-isclass": true
        },
        "LogsTooLarge": {
          "description": "Flag indicating if the logs were too large and were subsequently dropped from this event. This only occurs if the total event size is larger than 350KB after the FunctionResult was removed.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "MemoryConsumedBytes": {
          "x-jsontype": "Number",
          "x-actualtype": "uint32"
        },
        "ProcessorTimeSeconds": {
          "description": "Processor time consumed while executing the function. This does not include time spent waiting on API calls or HTTP requests.",
          "x-jsontype": "Number",
          "x-actualtype": "double"
        },
        "Revision": {
          "description": "The revision of the CloudScript that executed",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        }
      },
      "required": [
        "Revision",
        "ExecutionTimeSeconds",
        "ProcessorTimeSeconds",
        "MemoryConsumedBytes",
        "APIRequestsIssued",
        "HttpRequestsIssued"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "EntityId": {
          "description": "The identifier for the member entity.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "EntityType": {
          "description": "The type of member entity.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "RoleName": {
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "AdminRoleId": {
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "GroupName": {
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "MemberRoleId": {
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "DataObject": {
          "description": "The JSON Object that was last set on the profile.",
          "x-jsontype": "Object",
          "x-actualtype": "object"
        },
        "Name": {
          "description": "The name of this object.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Operation": {
          "$ref": "#/definitions/OperationTypes",
          "description": "The operation that was performed.",
          "x-jsontype": "String",
          "x-actualtype": "OperationTypes",
          "x-isenum": true
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "TotalValueToDateInUSD",
        "PlayerValuesToDate"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "AccountRecovery",
        "EmailVerification",
        "Custom"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "PlayFab",
        "SAML"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "CreateCart",
        "Init",
        "Approved",
        "Succeeded",
        "FailedByProvider",
        "DisputePending",
        "RefundPending",
        "Refunded",
        "RefundFailed",
        "ChargedBack",
        "FailedByUber",
        "FailedByPlayFab",
        "Revoked",
        "TradePending",
        "Traded",
        "Upgraded",
        "StackPending",
        "Stacked",
        "Other",
        "Failed"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Description of the catalog item.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "DisplayName": {
          "description": "Display name for the catalog item.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "ItemClass": {
          "description": "Class name to which catalog item belongs.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "ItemId": {
          "description": "Unique identifier for the catalog item.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "ItemInstanceId": {
          "description": "Unique instance identifier for this catalog item.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "RealCurrencyPrices": {
          "description": "Cost of the catalog item for each applicable real world currency.",
          "x-collection": "map",
          "x-jsontype": "Number",
          "x-actualtype": "uint32"
        },
        "VCAmount": {
          "description": "Amount of each applicable virtual currency which will be received as a result of purchasing this catalog item.",
          "x-collection": "map",
          "x-jsontype": "Number",
          "x-actualtype": "uint32"
        },
        "VirtualCurrencyPrices": {
          "description": "Cost of the catalog item for each applicable virtual currency.",
          "x-collection": "map",
          "x-jsontype": "Number",
          "x-actualtype": "uint32"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Other",
        "ExcessCapacity",
        "LimitExceeded",
        "BuildNotActiveInRegion",
        "Unresponsive"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Purchase",
        "ReceiptValidation"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "ResetValues"
      ]
    },
    {
      "description": "Statistic used as the source of leaderboard values.",
      "type": "object",
      "properties": {
        "StatisticId": {
          "description": "Unique ID of the statistic.",
          "x-jsontype": "Number",
          "x-actualtype": "uint32"
        },
        "StatisticName": {
          "description": "Name of the statistic.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      },
      "required": [
        "StatisticId"
      ]
    },
    {
      "description": "The source of values for the leaderboard. The properties are mutually exclusive - only one of them will be set and the rest will be null.",
      "type": "object",
      "properties": {
        "Statistic": {
          "$ref": "#/definitions/StatisticLeaderboardSource",
          "description": "Statistic associated with the leaderboard.",
          "x-jsontype": "Object",
          "x-actualtype": "StatisticLeaderboardSource",
          "x-isclass": true
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Unknown",
        "PlayFab",
        "Custom",
        "GameCenter",
        "GooglePlay",
        "Steam",
        "XBoxLive",
        "PSN",
        "Kongregate",
        "Facebook",
        "IOSDevice",
        "AndroidDevice",
        "Twitch",
        "WindowsHello"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Self",
        "Admin"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "CatalogVersion": {
          "description": "Catalog version of the inventory item.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "InstanceId": {
          "description": "Unique instance ID of the inventory item.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "ItemId": {
          "description": "Catalog item ID of the inventory item.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYR",
        "BZD",
        "CAD",
        "CDF",
        "CHF",
        "CLP",
        "CNY",
        "COP",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GGP",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "IMP",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JEP",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRO",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SPL",
        "SRD",
        "STD",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TVD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XCD",
        "XDR",
        "XOF",
        "XPF",
        "YER",
        "ZAR",
        "ZMW",
        "ZWD"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "AF",
        "AN",
        "AS",
        "EU",
        "NA",
        "OC",
        "SA"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "KH",
        "CM",
        "CA",
        "CV",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KP",
        "KR",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MK",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SZ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "US",
        "UM",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "City": {
          "description": "City of the player's geographic location.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "ContinentCode": {
          "$ref": "#/definitions/ContinentCode",
          "description": "The two-character continent code for this location",
          "x-jsontype": "String",
          "x-actualtype": "ContinentCode",
          "x-isenum": true
        },
        "CountryCode": {
          "$ref": "#/definitions/CountryCode",
          "description": "The two-character ISO 3166-1 country code for the country associated with the location",
          "x-jsontype": "String",
          "x-actualtype": "CountryCode",
          "x-isenum": true
        },
        "Latitude": {
          "description": "Latitude coordinate of the player's geographic location.",
          "x-jsontype": "Number",
          "x-actualtype": "double"
        },
        "Longitude": {
          "description": "Longitude coordinate of the player's geographic location.",
          "x-jsontype": "Number",
          "x-actualtype": "double"
        }
      },
      "required": [
        "ContinentCode",
        "CountryCode"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "AttributedAt": {
          "description": "UTC time stamp of attribution",
          "x-jsontype": "String",
          "x-actualtype": "DateTime"
        },
        "CampaignId": {
          "description": "Attribution campaign identifier",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Platform": {
          "description": "Attribution network name",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      },
      "required": [
        "AttributedAt"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "ApplePushNotificationService",
        "GoogleCloudMessaging"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "NotificationEndpointARN": {
          "description": "Notification configured endpoint",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Platform": {
          "$ref": "#/definitions/PushNotificationPlatform",
          "description": "Push notification platform",
          "x-jsontype": "String",
          "x-actualtype": "PushNotificationPlatform",
          "x-isenum": true
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "Email": {
          "description": "Linked account's email",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Platform": {
          "$ref": "#/definitions/LoginIdentityProvider",
          "description": "Authentication platform",
          "x-jsontype": "String",
          "x-actualtype": "LoginIdentityProvider",
          "x-isenum": true
        },
        "PlatformUserId": {
          "description": "Platform user identifier",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Username": {
          "description": "Linked account's username",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Statistic ID",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Name": {
          "description": "Statistic name",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "StatisticValue": {
          "description": "Current statistic value",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        },
        "StatisticVersion": {
          "description": "Statistic version (0 if not a versioned statistic)",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        }
      },
      "required": [
        "StatisticVersion",
        "StatisticValue"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Unverified",
        "Pending",
        "Confirmed"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "EmailAddress": {
          "description": "The email address",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Name": {
          "description": "The name of the email info data",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "VerificationStatus": {
          "$ref": "#/definitions/EmailVerificationStatus",
          "description": "The verification status of the email",
          "x-jsontype": "String",
          "x-actualtype": "EmailVerificationStatus",
          "x-isenum": true
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "AdCampaignAttributions": {
          "$ref": "#/definitions/AdCampaignAttribution",
          "description": "Array of ad campaigns player has been attributed to",
          "x-collection": "array",
          "x-jsontype": "Object",
          "x-actualtype": "AdCampaignAttribution",
          "x-isclass": true
        },
        "AvatarUrl": {
          "description": "Image URL of the player's avatar.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "BannedUntil": {
          "description": "Banned until UTC Date. If permanent ban this is set for 20 years after the original ban date.",
          "x-jsontype": "String",
          "x-actualtype": "DateTime"
        },
        "ContactEmailAddresses": {
          "$ref": "#/definitions/ContactEmailInfo",
          "description": "Array of contact email addresses associated with the player",
          "x-collection": "array",
          "x-jsontype": "Object",
          "x-actualtype": "ContactEmailInfo",
          "x-isclass": true
        },
        "Created": {
          "description": "Player record created",
          "x-jsontype": "String",
          "x-actualtype": "DateTime"
        },
        "DisplayName": {
          "description": "Player Display Name",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "LastLogin": {
          "description": "Last login",
          "x-jsontype": "String",
          "x-actualtype": "DateTime"
        },
        "LinkedAccounts": {
          "$ref": "#/definitions/PlayerLinkedAccount",
          "description": "Array of third party accounts linked to this player",
          "x-collection": "array",
          "x-jsontype": "Object",
          "x-actualtype": "PlayerLinkedAccount",
          "x-isclass": true
        },
        "Locations": {
          "$ref": "#/definitions/PlayerLocation",
          "description": "Dictionary of player's locations by type.",
          "x-collection": "map",
          "x-jsontype": "Object",
          "x-actualtype": "PlayerLocation",
          "x-isclass": true
        },
        "Origination": {
          "$ref": "#/definitions/LoginIdentityProvider",
          "description": "Player account origination",
          "x-jsontype": "String",
          "x-actualtype": "LoginIdentityProvider",
          "x-isenum": true
        },
        "PlayerId": {
          "description": "PlayFab Player ID",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "PlayerStatistics": {
          "$ref": "#/definitions/PlayerStatistic",
          "description": "Array of player statistics",
          "x-collection": "array",
          "x-jsontype": "Object",
          "x-actualtype": "PlayerStatistic",
          "x-isclass": true
        },
        "PublisherId": {
          "description": "Publisher this player belongs to",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "PushNotificationRegistrations": {
          "$ref": "#/definitions/PushNotificationRegistration",
          "description": "Array of configured push notification end points",
          "x-collection": "array",
          "x-jsontype": "Object",
          "x-actualtype": "PushNotificationRegistration",
          "x-isclass": true
        },
        "Statistics": {
          "description": "Dictionary of player's statistics using only the latest version's value",
          "x-collection": "map",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        },
        "Tags": {
          "description": "List of player's tags for segmentation.",
          "x-collection": "array",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "TitleId": {
          "description": "Title ID this profile applies to",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "TotalValueToDateInUSD": {
          "description": "A sum of player's total purchases in USD across all currencies.",
          "x-jsontype": "Number",
          "x-actualtype": "uint32"
        },
        "ValuesToDate": {
          "description": "Dictionary of player's total purchases by currency.",
          "x-collection": "map",
          "x-jsontype": "Number",
          "x-actualtype": "uint32"
        },
        "VirtualCurrencyBalances": {
          "description": "Dictionary of player's virtual currency balances",
          "x-collection": "map",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        }
      }
    },
    {
      "description": "Identifier by either name or ID. Note that a name may change due to renaming, or reused after being deleted. ID is immutable and unique.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Id Identifier, if present",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Name": {
          "description": "Name Identifier, if present",
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "AllowClientToAddVirtualCurrency": {
          "description": "Allow game clients to add to virtual currency balances via API.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "AllowClientToPostPlayerStatistics": {
          "description": "Allow game clients to update statistic values via API.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "AllowClientToStartGames": {
          "description": "Allow clients to start multiplayer game sessions via API.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "AllowClientToSubtractVirtualCurrency": {
          "description": "Allow game clients to subtract from virtual currency balances via API.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "AllowNonUniquePlayerDisplayNames": {
          "description": "Allow players to choose display names that may be in use by other players, i.e. do not enforce uniqueness of display names. Note: if this option is enabled, it cannot be disabled later.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "AllowServerToDeleteUsers": {
          "description": "Allow game servers to delete player accounts via API.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "DisableAPIAccess": {
          "description": "Disable API access by returning errors to all API requests.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "DisplayNameRandomSuffixLength": {
          "description": "Display name randomly-generated suffix length.",
          "x-jsontype": "Number",
          "x-actualtype": "int32"
        },
        "EnableClientIPAddressObfuscation": {
          "description": "Reduce the precision of IP addresses collected from players' devices before they are stored or used to estimate geographic locations.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "RequireCustomDataJSONFormat": {
          "description": "Require JSON format for data values associated with players, characters, inventories, and shared groups.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "UseExternalGameServerProvider": {
          "description": "Multiplayer game sessions are hosted on servers external to PlayFab.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        },
        "UseSandboxPayments": {
          "description": "Use payment provider's sandbox mode (if available) for real-money purchases. This can be useful when testing in-game purchasing in order to avoid being charged.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        }
      },
      "required": [
        "AllowClientToAddVirtualCurrency",
        "AllowClientToSubtractVirtualCurrency",
        "AllowClientToPostPlayerStatistics",
        "AllowClientToStartGames",
        "AllowServerToDeleteUsers",
        "UseSandboxPayments",
        "UseExternalGameServerProvider",
        "AllowNonUniquePlayerDisplayNames",
        "EnableClientIPAddressObfuscation",
        "RequireCustomDataJSONFormat",
        "DisableAPIAccess"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Succeeded",
        "Starting",
        "InProgress",
        "Failed",
        "Aborted",
        "Pending"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Last",
        "Min",
        "Max",
        "Sum"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "City": {
          "description": "City of the geographic location.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "ContinentCode": {
          "$ref": "#/definitions/ContinentCode",
          "description": "Two-character code representing the continent of geographic location.",
          "x-jsontype": "String",
          "x-actualtype": "ContinentCode",
          "x-isenum": true
        },
        "CountryCode": {
          "$ref": "#/definitions/CountryCode",
          "description": "Two-character ISO 3166-1 code representing the country of the geographic location.",
          "x-jsontype": "String",
          "x-actualtype": "CountryCode",
          "x-isenum": true
        },
        "Latitude": {
          "description": "Latitude coordinate of the geographic location.",
          "x-jsontype": "Number",
          "x-actualtype": "double"
        },
        "Longitude": {
          "description": "Longitude coordinate of the geographic location.",
          "x-jsontype": "Number",
          "x-actualtype": "double"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "USCentral",
        "USEast",
        "EUWest",
        "Singapore",
        "Japan",
        "Brazil",
        "Australia"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Warn",
        "Alert",
        "Critical"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Triggered",
        "Recovered",
        "ReTriggered"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "None",
        "Unpublished",
        "Published",
        "Archived"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Value",
        "Count",
        "Percent",
        "Milliseconds",
        "Seconds",
        "Hours",
        "Days",
        "Bits",
        "Bytes",
        "Kilobytes",
        "Megabytes",
        "Gigabytes",
        "Terabytes",
        "Bytes_Per_Second",
        "MonthlyActiveUsers",
        "EnableDisable"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Never",
        "Hour",
        "Day",
        "Week",
        "Month"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "Id": {
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "Name": {
          "x-jsontype": "String",
          "x-actualtype": "String"
        }
      }
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Realtime",
        "Turnbased",
        "Chat"
      ]
    },
    {
      "description": "",
      "type": "object",
      "enum": [
        "Admin",
        "BackEnd",
        "GameClient",
        "GameServer",
        "Partner"
      ]
    },
    {
      "description": "",
      "type": "object",
      "properties": {
        "ParentEventId": {
          "description": "The ID of the previous event that caused this event to be created by hitting a trigger.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "ParentTriggerId": {
          "description": "The ID of the trigger that caused this event to be created.",
          "x-jsontype": "String",
          "x-actualtype": "String"
        },
        "TriggeredEvents": {
          "description": "If true, then this event was allowed to trigger subsequent events in a trigger.",
          "x-jsontype": "Boolean",
          "x-actualtype": "Boolean"
        }
      },
      "required": [
        "TriggeredEvents"
      ]
    }
  ]
}